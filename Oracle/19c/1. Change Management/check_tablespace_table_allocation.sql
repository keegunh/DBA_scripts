/*
* 용도       : DB 테이블스페이스 검증 및 이관
* 마지막수정일자 : 2021.12.21
*
* HKG_TABLE_INFO, HKG_MODULE_TABLESPACES 정보 필요
*/

-- 테이블 TS 점검 : 각 테이블이 모듈별로 설계된 테이블스페이스에 저장되어 있는지 확인
SELECT C.OWNER
     , C.TABLE_NAME
     , C.PARTITIONED
     , B.MODULE
     , NVL(C.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME) ASIS_TAB_TS_NAME
     , DECODE(C.PARTITIONED, 'YES', B.PART_TAB_TS_NAME, 'NO', B.TAB_TS_NAME) TOBE_TAB_TS_NAME
  FROM HKG_TABLE_INFO A
     , HKG_MODULE_TABLESPACES B
     , DBA_TABLES C
     , DBA_PART_TABLES D
     , DBA_TAB_PARTITIONS E
 WHERE 1=1
   AND A.MODULE = B.MODULE
   AND A.OWNER = C.OWNER
   AND A.TABLE_NAME = C.TABLE_NAME
   AND A.OWNER = D.OWNER (+)
   AND A.TABLE_NAME = D.TABLE_NAME (+)
   AND A.OWNER = E.TABLE_OWNER (+)
   AND A.TABLE_NAME = E.TABLE_NAME (+)
   AND NVL(C.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME) < > DECODE(C.PARTITIONED, 'YES', B.PART_TAB_TS_NAME, 'NO', B.TAB_TS_NAME)
 GROUP BY C.OWNER, C.TABLE_NAME, C.PARTITIONED, C.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME, B.MODULE, B.TAB_TS_NAME, B.IDX_TS_NAME, B.PART_TAB_TS_NAME, B.PART_IDX_TS_NAME
--HAVING D.DEF_TABLESPACE_NAME < > MAX(E.TABLESPACE_NAME)
;

-- 인덱스 TS 점검 : 각 인덱스가 모듈별로 설계된 테이블스페이스에 저장되어 있는지 확인
SELECT C.OWNER
     , C.TABLE_NAME
     , C.INDEX_NAME
     , C.PARTITIONED
     , B.MODULE
     , NVL(C.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME) ASIS_IDX_TS_NAME
     , DECODE(C.PARTITIONED, 'YES', B.PART_IDX_TS_NAME, 'NO', B.IDX_TS_NAME) TOBE_IDX_TS_NAME
  FROM HKG_TABLE_INFO A
     , HKG_MODULE_TABLESPACES B
     , DBA_INDEXES C
     , DBA_PART_INDEXES D
     , DBA_IND_PARTITIONS E
 WHERE 1=1
   AND A.MODULE = B.MODULE
   AND A.OWNER = C.OWNER
   AND A.TABLE_NAME = C.TABLE_NAME
   AND C.OWNER = D.OWNER (+)
   AND C.INDEX_NAME = D.INDEX_NAME (+)
   AND C.OWNER = E.INDEX_OWNER (+)
   AND C.INDEX_NAME = E.INDEX_NAME (+)
   AND NVL(C.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME) < > DECODE(C.PARTITIONED, 'YES', B.PART_IDX_TS_NAME, 'NO', B.IDX_TS_NAME)
   AND C.INDEX_NAME NOT LIKE 'SYS\_%' ESCAPE '\'
 GROUP BY C.OWNER, C.TABLE_NAME, C.INDEX_NAME, C.PARTITIONED, C.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME, B.MODULE, B.TAB_TS_NAME, B.IDX_TS_NAME, B.PART_TAB_TS_NAME, B.PART_IDX_TS_NAME
--HAVING D.DEF_TABLESPACE_NAME < > MAX(E.TABLESPACE_NAME)
;

-- 테이블 TS 변경 DDL
SELECT OWNER
     , TABLE_NAME
     , TABLESPACE_NAME
     , 'ALTER TABLE ' || OWNER || '.' || TABLE_NAME || ' MOVE TABLESPACE TS_PMPB_D05;' AS MOVE_DDL
  FROM DBA_TABLES
 WHERE TABLESPACE_NAME = 'TS_ST_D01';

-- 인덱스 TS 변경 DDL
--SELECT OWNER
--     , TABLE_NAME
--     , INDEX_NAME
--     , TABLESPACE_NAME
--     , 'ALTER INDEX ' || OWNER || '.' || INDEX_NAME || ' REBUILD TABLESPACE TS_PMPB_D05;' AS MOVE_DDL
--  FROM DBA_INDEXES
-- WHERE TABLESPACE_NAME = 'TS_ST_I01';
SELECT A.OWNER
     , A.TABLE_NAME
     , A.PARTITIONED AS TAB_PART_YN
     , B.INDEX_NAME
     , B.PARTITIONED AS IDX_PART_YN
     , NVL(A.TABLESPACE_NAME, C.DEF_TABLESPACE_NAME) AS ASIS_TAB_TS
     , NVL(B.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME) AS ASIS_IDX_TS
     , REPLACE(NVL(A.TABLESPACE_NAME, C.DEF_TABLESPACE_NAME), '_D', '_I') AS TOBE_IDX_TS
     , 'ALTER INDEX ' || B.OWNER || '.' || B.INDEX_NAME || ' REBUILD TABLESPACE ' || REPLACE(NVL(A.TABLESPACE_NAME, C.DEF_TABLESPACE_NAME), '_D', '_I') || ';' AS DDL
  FROM DBA_TABLES A
     , DBA_INDEXES B
     , DBA_PART_TABLES C
     , DBA_PART_INDEXES D
 WHERE A.OWNER = B.OWNER (+)
   AND A.TABLE_NAME = B.TABLE_NAME (+)
   AND A.OWNER = C.OWNER (+)
   AND A.TABLE_NAME = C.TABLE_NAME (+)
   AND A.OWNER = D.OWNER (+)
   AND A.TABLE_NAME = D.TABLE_NAME (+)
   AND A.OWNER IN ('')
   AND B.INDEX_NAME NOT LIKE 'SYS\_%' ESCAPE '\'
   AND B.PARTITIONED = 'NO'
   AND NVL(B.TABLESPACE_NAME, D.DEF_TABLESPACE_NAME) < > REPLACE(NVL(A.TABLESPACE_NAME, C.DEF_TABLESPACE_NAME), '_D', '_I')
;



-- 파티션 Table move

-- 1. 파티션 테이블 : DEFAUT TS 변경 DDL
SELECT OWNER
     , TABLE_NAME
     , DEF_TABLESPACE_NAME
     , 'ALTER TABLE  ' || OWNER || '.' || TABLE_NAME || ' MODIFY DEFAULT ATTRIBUTES TABLESPACE [TOBE_TABLESPACE];' AS DDL
  FROM DBA_PART_TABLES
 WHERE OWNER = ''
   AND DEF_TABLESPACE_NAME = '[ASIS_TABLESPACE]' ;
 
-- 2. 파티션 테이블 : move 파티션 TS DDL 
SELECT TABLE_OWNER
     , TABLE_NAME
     , PARTITION_NAME
     , TABLESPACE_NAME
     , 'ALTER TABLE ' || TABLE_OWNER || '.' || TABLE_NAME || ' MOVE PARTITION ' || PARTITION_NAME || ' TABLESPACE [TOBE_TABLESPACE];' MOVE_DDL
  FROM DBA_TAB_PARTITIONS
 WHERE TABLE_OWNER = ''
   AND TABLESPACE_NAME = '[ASIS_TABLESPACE]';
 
-- 3. 파티션 인덱스 : DEFAULT TS 변경 DDL
SELECT OWNER
     , TABLE_NAME
     , INDEX_NAME
	 , DEF_TABLESPACE_NAME
     , 'ALTER INDEX ' || OWNER || '.' || INDEX_NAME || ' MODIFY DEFAULT ATTRIBUTES TABLESPACE [TOBE_TABLESPACE];' AS DDL
  FROM DBA_PART_INDEXES
 WHERE DEF_TABLESPACE_NAME = '[ASIS_TABLESPACE]';
 
-- 4. 파티션 인덱스 : move 파티션 TS DDL
SELECT INDEX_OWNER
     , INDEX_NAME
     , PARTITION_NAME
     , TABLESPACE_NAME
     , STATUS
     , 'ALTER INDEX ' || INDEX_OWNER || '.' || INDEX_NAME || ' REBUILD PARTITION ' || PARTITION_NAME || ' TABLESPACE [TOBE_TABLESPACE];' AS MOVE_DDL
  FROM DBA_IND_PARTITIONS
 WHERE INDEX_OWNER = ''
   AND TABLESPACE_NAME = '[ASIS_TABLESPACE]';
 





-- 5. 파티션 인덱스 : DEFAULT TS 변경 DDL
SELECT A.OWNER
     , A.TABLE_NAME
     , A.INDEX_NAME
     , A.DEF_TABLESPACE_NAME DEV_TS
     , B.DEF_TABLESPACE_NAME PRD_TS
     , 'ALTER INDEX ' || A.OWNER || '.' || A.INDEX_NAME || ' MODIFY DEFAULT ATTRIBUTES TABLESPACE ' || B.DEF_TABLESPACE_NAME || ';' AS DDL
  FROM DBA_PART_INDEXES A, DBA_PART_INDEXES@DB_LINK B  
 WHERE 1=1
   AND A.OWNER = B.OWNER
   AND A.TABLE_NAME = B.TABLE_NAME
   AND A.INDEX_NAME = B.INDEX_NAME
   AND A.OWNER = ''
   AND A.DEF_TABLESPACE_NAME < > B.DEF_TABLESPACE_NAME;
   AND A.DEF_TABLESPACE_NAME = '[ASIS_TABLESPACE]';

-- 6. 파티션 인덱스 : move 파티션 TS DDL
SELECT A.INDEX_OWNER
     , A.INDEX_NAME
     , A.PARTITION_NAME
     , A.TABLESPACE_NAME DEV_TS
     , B.TABLESPACE_NAME PRD_TS
     , A.STATUS
     , 'ALTER INDEX ' || A.INDEX_OWNER || '.' || A.INDEX_NAME || ' REBUILD PARTITION ' || A.PARTITION_NAME || ' TABLESPACE ' || B.TABLESPACE_NAME || ';' AS MOVE_DDL
  FROM DBA_IND_PARTITIONS A, DBA_IND_PARTITIONS@DB_LINK B
 WHERE 1=1
   AND A.INDEX_OWNER = B.INDEX_OWNER
   AND A.INDEX_NAME = B.INDEX_NAME
   AND A.PARTITION_NAME = B.PARTITION_NAME
   AND A.INDEX_OWNER = ''
   AND A.TABLESPACE_NAME < > B.TABLESPACE_NAME;


SELECT TABLE_OWNER
     , TABLE_NAME
     , TABLE_TYPE
     , INDEX_NAME
     , INDEX_TYPE
     , TABLESPACE_NAME
     , STATUS
  FROM DBA_INDEXES
 WHERE OWNER = ''
   AND STATUS = 'UNUSABLE';
 
SELECT INDEX_OWNER
     , INDEX_NAME
     , PARTITION_NAME
     , TABLESPACE_NAME
     , STATUS
     , 'ALTER INDEX ' || INDEX_OWNER || '.' || INDEX_NAME || ' REBUILD PARTITION ' || PARTITION_NAME || ';'
  FROM DBA_IND_PARTITIONS
 WHERE INDEX_OWNER = ''
   AND STATUS = 'UNUSABLE';
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
SELECT A.OWNER
     , A.TABLE_NAME
     , A.TABLE_COMMENT
     , A.PARTITIONING_TYPE
     , A.SUBPARTITIONING_TYPE
     , NVL(B.TABLESPACE_NAME, C.DEF_TABLESPACE_NAME) AS ASIS_TB
     , A.TABLESPACE_NAME AS TOBE_TS
  FROM HKG_TABLE_INFO A 
  , DBA_TABLES B
  , DBA_PART_TABLES C
 WHERE 1=1
 AND A.OWNER = B.OWNER 
 AND A.TABLE_NAME = B.TABLE_NAME
 AND A.OWNER = C.OWNER (+)
 AND A.TABLE_NAME = C.TABLE_NAME (+)
 AND A.TABLESPACE_NAME < > NVL(B.TABLESPACE_NAME, C.DEF_TABLESPACE_NAME);
;