-- DBMS_STATS.GATHER_TABLE_STATS() 함수는 서버직접 접속하여 sqlplus로 실행
-- 일반 클라이언트 툴에서 실행 불가

-- ################ 통계 정보 조회 ################ 
-- TAB_STATISTICS (TABLES, TAB_PARTITIONS, TAB_SUBPARTITIONS 내 통계정보 취합된 뷰)
-- 통계 정보 생성 (TABLE, PARTITION, SUBPARTITION)
SELECT OWNER
     , TABLE_NAME
     , PARTITION_NAME
     , PARTITION_POSITION
     , SUBPARTITION_NAME
     , SUBPARTITION_POSITION
     , OBJECT_TYPE
     , DECODE(OBJECT_TYPE, 'TABLE', 'EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>''' || OWNER || ''', TABNAME=>''' || TABLE_NAME || ''', GRANULARITY=>''ALL'', DEGREE=>8, CASCADE=>TRUE, METHOD_OPT=>''FOR ALL COLUMNS SIZE 1'', NO_INVALIDATE=>FALSE, ESTIMATE_PERCENT=>DBMS_STATS.AUTO_SAMPLE_SIZE);'
                         , 'PARTITION', 'EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>''' || OWNER || ''', TABNAME=>''' || TABLE_NAME || ''', GRANULARITY=>''PARTITION'', PARTNAME=>''' || PARTITION_NAME || ''', DEGREE=>8, CASCADE=>TRUE, METHOD_OPT=>''FOR ALL COLUMNS SIZE 1'', NO_INVALIDATE=>FALSE, ESTIMATE_PERCENT=>DBMS_STATS.AUTO_SAMPLE_SIZE);'
                         , 'SUBPARTITION', 'EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>''' || OWNER || ''', TABNAME=>''' || TABLE_NAME || ''', GRANULARITY=>''SUBPARTITION'', PARTNAME=>''' || SUBPARTITION_NAME || ''', DEGREE=>8, CASCADE=>TRUE, METHOD_OPT=>''FOR ALL COLUMNS SIZE 1'', NO_INVALIDATE=>FALSE, ESTIMATE_PERCENT=>DBMS_STATS.AUTO_SAMPLE_SIZE);' 
       ) GATHER_STATS_DDL
  FROM DBA_TAB_STATISTICS
 WHERE 1=1
   AND OWNER IN ('')
   AND LAST_ANALYZED IS NULL
   AND OBJECT_TYPE = 'TABLE'
--   AND OBJECT_TYPE = 'PARTITION'
--   AND OBJECT_TYPE = 'SUBPARTITION'
 ORDER BY OWNER, TABLE_NAME, DECODE(OBJECT_TYPE, 'TABLE', 1, 'PARTITION', 2, 'SUBPARTITION', 3), PARTITION_NAME, SUBPARTITION_NAME;


-- 통계 정보 복사 (PARTITION, SUBPARTITION 중 통계정보가 없으면 가장 최근 파티션의 통계정보를 복사)
WITH TEMP_TAB_STATS AS (
   SELECT *
     FROM DBA_TAB_STATISTICS
    WHERE OWNER IN ('')
      AND OBJECT_TYPE = 'PARTITION'
--      AND OBJECT_TYPE = 'SUBPARTITION'
)
SELECT 
       A.OWNER
     , A.TABLE_NAME
     , A.PARTITION_NAME AS PART_NAME
     , A.PARTITION_POSITION AS PART_POS
     , A.SUBPARTITION_NAME AS SUBPART_NAME
     , A.SUBPARTITION_POSITION AS SUBPART_POS
     , A.OBJECT_TYPE AS OBJ_TYPE
     , C.FIRST_PART_NAME
     , C.FIRST_SUBPART_NAME
     , B.LAST_ANALYZED_PART
     , B.LAST_ANALYZED_SUBPART
	 , TO_CHAR(B.LAST_ANALYZED, 'YYYY/MM/DD HH24:MM:SS') AS LAST_ANALYZED
     , CASE WHEN A.OBJECT_TYPE = 'PARTITION' AND B.LAST_ANALYZED IS NOT NULL
            THEN 'EXEC DBMS_STATS.COPY_TABLE_STATS(OWNNAME=>''' || A.OWNER || ''', TABNAME=>''' || A.TABLE_NAME || ''', SRCPARTNAME=> ''' || B.LAST_ANALYZED_PART || ''', DSTPARTNAME=>''' || A.PARTITION_NAME    || ''');' 
            WHEN A.OBJECT_TYPE = 'PARTITION' AND B.LAST_ANALYZED IS NULL AND PARTITION_POSITION = 1
            THEN 'EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>''' || A.OWNER || ''', TABNAME=>''' || A.TABLE_NAME || ''', GRANULARITY=>''PARTITION'', PARTNAME=>''' || A.PARTITION_NAME || ''', DEGREE=>8, CASCADE=>TRUE, METHOD_OPT=>''FOR ALL COLUMNS SIZE 1'', NO_INVALIDATE=>FALSE, ESTIMATE_PERCENT=>DBMS_STATS.AUTO_SAMPLE_SIZE);'
            WHEN A.OBJECT_TYPE = 'PARTITION' AND B.LAST_ANALYZED IS NULL AND PARTITION_POSITION < > 1
            THEN 'EXEC DBMS_STATS.COPY_TABLE_STATS(OWNNAME=>''' || A.OWNER || ''', TABNAME=>''' || A.TABLE_NAME || ''', SRCPARTNAME=> ''' || C.FIRST_PART_NAME || ''', DSTPARTNAME=>''' || A.PARTITION_NAME    || ''');' 
            WHEN A.OBJECT_TYPE = 'SUBPARTITION' AND B.LAST_ANALYZED IS NOT NULL
            THEN 'EXEC DBMS_STATS.COPY_TABLE_STATS(OWNNAME=>''' || A.OWNER || ''', TABNAME=>''' || A.TABLE_NAME || ''', SRCPARTNAME=> ''' || B.LAST_ANALYZED_SUBPART || ''', DSTPARTNAME=>''' || A.SUBPARTITION_NAME || ''');'
            WHEN A.OBJECT_TYPE = 'SUBPARTITION' AND B.LAST_ANALYZED IS NULL AND SUBPARTITION_POSITION = 1
            THEN 'EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>''' || A.OWNER || ''', TABNAME=>''' || A.TABLE_NAME || ''', GRANULARITY=>''SUBPARTITION'', PARTNAME=>''' || A.SUBPARTITION_NAME || ''', DEGREE=>8, CASCADE=>TRUE, METHOD_OPT=>''FOR ALL COLUMNS SIZE 1'', NO_INVALIDATE=>FALSE, ESTIMATE_PERCENT=>DBMS_STATS.AUTO_SAMPLE_SIZE);'
            WHEN A.OBJECT_TYPE = 'SUBPARTITION' AND B.LAST_ANALYZED IS NULL AND SUBPARTITION_POSITION < > 1
            THEN 'EXEC DBMS_STATS.COPY_TABLE_STATS(OWNNAME=>''' || A.OWNER || ''', TABNAME=>''' || A.TABLE_NAME || ''', SRCPARTNAME=> ''' || C.FIRST_SUBPART_NAME || ''', DSTPARTNAME=>''' || A.SUBPARTITION_NAME || ''');'
            ELSE NULL
       END COPY_STATS_DDL
          FROM (SELECT OWNER
             , TABLE_NAME
             , PARTITION_NAME
             , PARTITION_POSITION
             , SUBPARTITION_NAME
             , SUBPARTITION_POSITION
             , OBJECT_TYPE
          FROM TEMP_TAB_STATS
         WHERE LAST_ANALYZED IS NULL) A
     , (SELECT OWNER
             , TABLE_NAME
             , MAX(PARTITION_NAME) AS LAST_ANALYZED_PART
             , MAX(SUBPARTITION_NAME) AS LAST_ANALYZED_SUBPART
             , MAX(LAST_ANALYZED) AS LAST_ANALYZED
          FROM TEMP_TAB_STATS
         WHERE LAST_ANALYZED IS NOT NULL
         GROUP BY OWNER, TABLE_NAME
       ) B
     , (SELECT OWNER
             , TABLE_NAME
             , MIN(PARTITION_NAME) AS FIRST_PART_NAME
             , MIN(SUBPARTITION_NAME) AS FIRST_SUBPART_NAME
          FROM TEMP_TAB_STATS
         WHERE LAST_ANALYZED IS NULL
         GROUP BY OWNER, TABLE_NAME) C
 WHERE 1=1
   AND A.OWNER = B.OWNER (+)
   AND A.TABLE_NAME = B.TABLE_NAME (+)
   AND A.OWNER = C.OWNER 
   AND A.TABLE_NAME = C.TABLE_NAME
 ORDER BY A.OWNER, A.TABLE_NAME, DECODE(A.OBJECT_TYPE, 'TABLE', 1, 'PARTITION', 2, 'SUBPARTITION', 3), A.PARTITION_NAME, A.SUBPARTITION_NAME
;



-- IND_STATISTICS 조회 (INDEXES, IND_PARTITIONS, IND_SUBPARTITIONS 내 통계정보 취합된 뷰)
-- 인덱스 통계 생성
SELECT OWNER
     , INDEX_NAME
     , TABLE_OWNER
     , TABLE_NAME
     , PARTITION_NAME
     , PARTITION_POSITION
     , SUBPARTITION_NAME
     , SUBPARTITION_POSITION
     , OBJECT_TYPE
     , BLEVEL
     , LEAF_BLOCKS
     , DISTINCT_KEYS
     , AVG_LEAF_BLOCKS_PER_KEY
     , AVG_DATA_BLOCKS_PER_KEY
     , CLUSTERING_FACTOR
     , NUM_ROWS
     , AVG_CACHED_BLOCKS
     , AVG_CACHE_HIT_RATIO
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , GLOBAL_STATS
     , USER_STATS
     , STATTYPE_LOCKED
     , STALE_STATS
     , SCOPE
     , 'EXEC DBMS_STATS.GATHER_INDEX_STATS(OWNNAME=>'''|| OWNER ||''',INDNAME=>''' || INDEX_NAME || ''', GRANULARITY=>''AUTO'', DEGREE=>8, NO_INVALIDATE=>FALSE, ESTIMATE_PERCENT=>DBMS_STATS.AUTO_SAMPLE_SIZE);' AS GATHER_STAT_DDL
  FROM DBA_IND_STATISTICS
 WHERE 1=1
   AND OWNER IN ('')
   AND INDEX_NAME NOT LIKE 'SYS\_%' ESCAPE '\'
   AND LAST_ANALYZED IS NULL
 ORDER BY OWNER, TABLE_NAME, DECODE(OBJECT_TYPE, 'INDEX', 1, 'PARTITION', 2, 'SUBPARTITION', 3), PARTITION_NAME, SUBPARTITION_NAME;