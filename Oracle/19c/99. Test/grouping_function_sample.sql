-- GROUPING FUNCTION
WITH MONTHLY_SALES AS (
     SELECT 'P001' AS PROD_ID, '2019.10' AS MTH, 'SAMSUNG' AS COMP_NM, 15000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P001' AS PROD_ID, '2019.11' AS MTH, 'SAMSUNG' AS COMP_NM, 25000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P002' AS PROD_ID, '2019.10' AS MTH, 'LG' AS COMP_NM, 10000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P002' AS PROD_ID, '2019.11' AS MTH, 'LG' AS COMP_NM, 20000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P003' AS PROD_ID, '2019.10' AS MTH, 'APPLE' AS COMP_NM, 15000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P003' AS PROD_ID, '2019.11' AS MTH, 'APPLE' AS COMP_NM, 10000 AS SALE_AMT FROM DUAL
)
SELECT CASE WHEN GROUPING(PROD_ID) = 1 THEN 'ALL PROD_ID' ELSE PROD_ID AS PROD_ID
	 , CASE WHEN GROUPING(MTH) = 1 THEN 'ALL MTH' ELSE MTH AS MTH
     , COMP_NM
     , SUM(SALE_AMT)
  FROM MONTHLY_SALES
 -- GROUP BY PROD_ID, MTH
 -- GROUP BY CUBE(PROD_ID, MTH)
 -- GROUP BY ROLLUP(PROD_ID, MTH)
 -- GROUP BY PROD_ID, ROLLUP(MTH, COMP_NM)
 GROUP BY GROUPING SETS(PROD_ID, MTH), COMP_NM)
;




-- 구현방법1: ROLLUP 함수 사용
WITH MONTHLY_SALES AS (
     SELECT 'P001' AS PROD_ID, '2019.10' AS MTH, 'SAMSUNG' AS COMP_NM, 15000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P001' AS PROD_ID, '2019.11' AS MTH, 'SAMSUNG' AS COMP_NM, 25000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P002' AS PROD_ID, '2019.10' AS MTH, 'LG' AS COMP_NM, 10000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P002' AS PROD_ID, '2019.11' AS MTH, 'LG' AS COMP_NM, 20000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P003' AS PROD_ID, '2019.10' AS MTH, 'APPLE' AS COMP_NM, 15000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P003' AS PROD_ID, '2019.11' AS MTH, 'APPLE' AS COMP_NM, 10000 AS SALE_AMT FROM DUAL
)
SELECT PROD_ID
     , CASE WHEN GROUPING(MTH) = 1 THEN 'ALL MTH' ELSE MTH END AS MTH
	 , SUM(SALE_AMT)
  FROM MONTHLY_SALES
 GROUP BY PROD_ID, ROLLUP(MTH)
;

-- 구현방법2: ROLLUP, GROUPING 함수 대신 복제 기법 사용
WITH MONTHLY_SALES AS (
     SELECT 'P001' AS PROD_ID, '2019.10' AS MTH, 'SAMSUNG' AS COMP_NM, 15000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P001' AS PROD_ID, '2019.11' AS MTH, 'SAMSUNG' AS COMP_NM, 25000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P002' AS PROD_ID, '2019.10' AS MTH, 'LG' AS COMP_NM, 10000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P002' AS PROD_ID, '2019.11' AS MTH, 'LG' AS COMP_NM, 20000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P003' AS PROD_ID, '2019.10' AS MTH, 'APPLE' AS COMP_NM, 15000 AS SALE_AMT FROM DUAL
      UNION ALL
     SELECT 'P003' AS PROD_ID, '2019.11' AS MTH, 'APPLE' AS COMP_NM, 10000 AS SALE_AMT FROM DUAL
)
SELECT PROD_ID
     , DECODE(NO, 1, MTH, 2, 'ALL MTH') AS MTH
  FROM MONTHLY_SALES
     , (SELECT ROWNUM AS NO FROM DUAL CONNECT BY LEVEL <= 2)
 GROUP BY PROD_ID, NO, DECODE(NO, 1, MTH, 2, 'ALL MTH')
 ORDER BY PROD_ID, MTH
;