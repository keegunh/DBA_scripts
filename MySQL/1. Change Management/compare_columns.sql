-- DB 간 테이블 칼럼 구성 차이 확인 (테이블 기준으로 확인)
SHOW VARIABLES LIKE '%group_concat%';
SET SESSION group_concat_max_len = 1024 * 1024;
WITH PORTAL AS (SELECT 'PRD_PORTAL' AS DB
                     , TABLE_SCHEMA
                     , TABLE_NAME
                     , GROUP_CONCAT(COLUMN_NAME ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_NAME
                     , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IFNULL(COLUMN_DEFAULT, 'NULL'), ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_DEFAULT
                     , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IS_NULLABLE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS IS_NULLABLE
                     , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_TYPE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_TYPE
                     , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_KEY, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_KEY
                     , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_COMMENT, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_COMMENT
                     , COUNT(COLUMN_NAME) AS COLUMN_COUNT
                  FROM PRD_PORTAL.COLUMNS
                 GROUP BY TABLE_SCHEMA, TABLE_NAME)
   , LGCNS AS (SELECT 'PRD_LGCNS' AS DB
                    , TABLE_SCHEMA
                    , TABLE_NAME
                    , GROUP_CONCAT(COLUMN_NAME ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_NAME
                    , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IFNULL(COLUMN_DEFAULT, 'NULL'), ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_DEFAULT
                    , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IS_NULLABLE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS IS_NULLABLE
                    , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_TYPE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_TYPE
                    , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_KEY, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_KEY
                    , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_COMMENT, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_COMMENT
                    , COUNT(COLUMN_NAME) AS COLUMN_COUNT
                 FROM PRD_LGCNS.COLUMNS
                GROUP BY TABLE_SCHEMA, TABLE_NAME)
   , LGC AS (SELECT 'PRD_LGC' AS DB
                  , TABLE_SCHEMA
                  , TABLE_NAME
                  , GROUP_CONCAT(COLUMN_NAME ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_NAME
                  , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IFNULL(COLUMN_DEFAULT, 'NULL'), ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_DEFAULT
                  , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IS_NULLABLE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS IS_NULLABLE
                  , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_TYPE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_TYPE
                  , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_KEY, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_KEY
                  , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_COMMENT, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_COMMENT
                  , COUNT(COLUMN_NAME) AS COLUMN_COUNT
               FROM PRD_LGC.COLUMNS
              GROUP BY TABLE_SCHEMA, TABLE_NAME)
   , LGES AS (SELECT 'PRD_LGES' AS DB
                   , TABLE_SCHEMA
                   , TABLE_NAME
                   , GROUP_CONCAT(COLUMN_NAME ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_NAME
                   , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IFNULL(COLUMN_DEFAULT, 'NULL'), ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_DEFAULT
                   , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', IS_NULLABLE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS IS_NULLABLE
                   , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_TYPE, ']')  ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_TYPE
                   , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_KEY, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_KEY
                   , GROUP_CONCAT(CONCAT(COLUMN_NAME, '[', COLUMN_COMMENT, ']') ORDER BY ORDINAL_POSITION SEPARATOR ', ') AS COLUMN_COMMENT
                   , COUNT(COLUMN_NAME) AS COLUMN_COUNT
                FROM PRD_LGES.COLUMNS
               GROUP BY TABLE_SCHEMA, TABLE_NAME)
SELECT X.TABLE_SCHEMA
     , X.TABLE_NAME
--      , CASE WHEN LAG(X.TABLE_NAME, 1, NULL) OVER (ORDER BY TABLE_SCHEMA, TABLE_NAME) = X.TABLE_NAME 
--               OR LEAD(X.TABLE_NAME, 1, NULL) OVER (ORDER BY TABLE_SCHEMA, TABLE_NAME) = X.TABLE_NAME THEN '테이블 칼럼 구성이 DB별로 상이' ELSE '테이블이 일부 DB에만 생성' END AS ISSUE
     , X.COLUMN_TYPE	-- (COLUMN_NAME, COLUMN_DEFAULT, IS_NULLABLE, COLUMN_TYPE, COLUMN_KEY, COLUMN_COMMENT 중 택일)
     , X.COLUMN_COUNT
     , COUNT(1) DB_COUNT
     , GROUP_CONCAT(DB SEPARATOR ', ') AS DB_AGG
  FROM (SELECT * FROM PORTAL
         UNION ALL
        SELECT * FROM LGCNS
         UNION ALL
        SELECT * FROM LGC
         UNION ALL
        SELECT * FROM LGES) X
 WHERE 1=1
 GROUP BY X.TABLE_SCHEMA, X.TABLE_NAME, X.COLUMN_TYPE, X.COLUMN_COUNT
HAVING COUNT(1) < 4
 ORDER BY X.TABLE_SCHEMA, X.TABLE_NAME, X.COLUMN_TYPE, X.COLUMN_COUNT, DB_AGG DESC
;







-- DB 간 테이블 칼럼 구성 차이 확인 (칼럼 기준으로 확인)
SHOW VARIABLES LIKE '%group_concat%';
SET SESSION group_concat_max_len = 1024 * 1024;
WITH PORTAL AS (SELECT 'PRD_PORTAL' AS DB
                     , TABLE_SCHEMA
                     , TABLE_NAME
                     , COLUMN_NAME
                     , CONCAT('[', IFNULL(COLUMN_DEFAULT, 'NULL'), '], [', IS_NULLABLE, '], [', COLUMN_TYPE, '], [', COLUMN_KEY, '], [', COLUMN_COMMENT, ']') AS COLUMN_INFO
                     , CONCAT('ALTER TABLE ', TABLE_SCHEMA, '.', TABLE_NAME, ' MODIFY COLUMN ', COLUMN_NAME, ' ', COLUMN_TYPE, CASE IS_NULLABLE WHEN 'NO' THEN ' NOT NULL' WHEN 'YES' THEN ' NULL' END, CASE WHEN COLUMN_DEFAULT IS NULL THEN '' ELSE CONCAT(' DEFAULT ''', COLUMN_DEFAULT, '''') END, CASE WHEN COLLATION_NAME IS NOT NULL THEN CONCAT(' COLLATE ', COLLATION_NAME) ELSE '' END , ' COMMENT ''', COLUMN_COMMENT, ''';' ) AS ALTER_DDL
                  FROM PRD_PORTAL.COLUMNS)
   , LGCNS AS (SELECT 'PRD_LGCNS' AS DB
                    , TABLE_SCHEMA
                    , TABLE_NAME
                     , COLUMN_NAME
                     , CONCAT('[', IFNULL(COLUMN_DEFAULT, 'NULL'), '], [', IS_NULLABLE, '], [', COLUMN_TYPE, '], [', COLUMN_KEY, '], [', COLUMN_COMMENT, ']') AS COLUMN_INFO
                     , CONCAT('ALTER TABLE ', TABLE_SCHEMA, '.', TABLE_NAME, ' MODIFY COLUMN ', COLUMN_NAME, ' ', COLUMN_TYPE, CASE IS_NULLABLE WHEN 'NO' THEN ' NOT NULL' WHEN 'YES' THEN ' NULL' END, CASE WHEN COLUMN_DEFAULT IS NULL THEN '' ELSE CONCAT(' DEFAULT ''', COLUMN_DEFAULT, '''') END, CASE WHEN COLLATION_NAME IS NOT NULL THEN CONCAT(' COLLATE ', COLLATION_NAME) ELSE '' END , ' COMMENT ''', COLUMN_COMMENT, ''';' ) AS ALTER_DDL
                 FROM PRD_LGCNS.COLUMNS)
   , LGC AS (SELECT 'PRD_LGC' AS DB
                  , TABLE_SCHEMA
                  , TABLE_NAME
                     , COLUMN_NAME
                     , CONCAT('[', IFNULL(COLUMN_DEFAULT, 'NULL'), '], [', IS_NULLABLE, '], [', COLUMN_TYPE, '], [', COLUMN_KEY, '], [', COLUMN_COMMENT, ']') AS COLUMN_INFO
                     , CONCAT('ALTER TABLE ', TABLE_SCHEMA, '.', TABLE_NAME, ' MODIFY COLUMN ', COLUMN_NAME, ' ', COLUMN_TYPE, CASE IS_NULLABLE WHEN 'NO' THEN ' NOT NULL' WHEN 'YES' THEN ' NULL' END, CASE WHEN COLUMN_DEFAULT IS NULL THEN '' ELSE CONCAT(' DEFAULT ''', COLUMN_DEFAULT, '''') END, CASE WHEN COLLATION_NAME IS NOT NULL THEN CONCAT(' COLLATE ', COLLATION_NAME) ELSE '' END , ' COMMENT ''', COLUMN_COMMENT, ''';' ) AS ALTER_DDL
               FROM PRD_LGC.COLUMNS)
   , LGES AS (SELECT 'PRD_LGES' AS DB
                   , TABLE_SCHEMA
                   , TABLE_NAME
                     , COLUMN_NAME
                     , CONCAT('[', IFNULL(COLUMN_DEFAULT, 'NULL'), '], [', IS_NULLABLE, '], [', COLUMN_TYPE, '], [', COLUMN_KEY, '], [', COLUMN_COMMENT, ']') AS COLUMN_INFO
                     , CONCAT('ALTER TABLE ', TABLE_SCHEMA, '.', TABLE_NAME, ' MODIFY COLUMN ', COLUMN_NAME, ' ', COLUMN_TYPE, CASE IS_NULLABLE WHEN 'NO' THEN ' NOT NULL' WHEN 'YES' THEN ' NULL' END, CASE WHEN COLUMN_DEFAULT IS NULL THEN '' ELSE CONCAT(' DEFAULT ''', COLUMN_DEFAULT, '''') END, CASE WHEN COLLATION_NAME IS NOT NULL THEN CONCAT(' COLLATE ', COLLATION_NAME) ELSE '' END , ' COMMENT ''', COLUMN_COMMENT, ''';' ) AS ALTER_DDL
                FROM PRD_LGES.COLUMNS)
SELECT X.TABLE_SCHEMA
     , X.TABLE_NAME
     , X.COLUMN_NAME
     , X.COLUMN_INFO AS "COLUMN_INFO: [DEFAULT], [IS_NULLABLE], [TYPE], [KEY], [COMMENT]"
     , COUNT(1) DB_COUNT
     , GROUP_CONCAT(DB SEPARATOR ', ') AS DB_AGG
     , X.ALTER_DDL
  FROM (SELECT * FROM PORTAL
         UNION ALL
        SELECT * FROM LGCNS
         UNION ALL
        SELECT * FROM LGC
         UNION ALL
        SELECT * FROM LGES) X
 WHERE 1=1
 GROUP BY X.TABLE_SCHEMA, X.TABLE_NAME, X.COLUMN_NAME, X.COLUMN_INFO, X.ALTER_DDL
HAVING COUNT(1) < 4
 ORDER BY X.TABLE_SCHEMA, X.TABLE_NAME, X.COLUMN_NAME, X.COLUMN_INFO, X.ALTER_DDL, DB_AGG DESC
;