-- 0. enable IAM authentication in the RDS instance

-- 1. login to RDS instance first using admin(root)
mysql -h my-rds-mysql-iam-authentication.chggc0wqagxj.ap-northeast-2.rds.amazonaws.com -P 9306 -u admin -pmysql123

-- 2. create user that will encrypt client connections using SSL/TLS
CREATE USER iamauth IDENTIFIED WITH AWSAuthenticationPlugin as 'RDS';
ALTER USER iamauth REQUIRE SSL;
SELECT host, user, plugin, authentication_string , ssl_type FROM mysql.user;

-- 3. create IAM policy that uses "rds-db:connect" as action
-- https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.IAMPolicy.html
-- if you want to limit the databases using this policy, use the policy below
-- Check Resource ID of DB using AWS CLI: aws rds describe-db-instances --query "DBInstances[*].[DBInstanceIdentifier,DbiResourceId]"
-- Check Resource ID using AWS Console: RDS > Databases > [DB name] > Configuration > Resource ID
-- Resource format: "arn:aws:rds-db:[AWS region code]:[AWS Account ID]:dbuser:[DB resource ID]/[DB User]"
{
   "Version": "2012-10-17",
   "Statement": [
      {
         "Effect": "Allow",
         "Action": [
             "rds-db:connect"
         ],
         "Resource": [
             "arn:aws:rds-db:ap-northeast-2:992382633459:dbuser:db-5FFVG6CMY4BFNUS4H5K4X3RY4M/iamauth"
         ]
      }
   ]
}

-- if you want to allow all databases to use this policy, use the policy below
{
   "Version": "2012-10-17",
   "Statement": [
      {
         "Effect": "Allow",
         "Action": [
             "rds-db:connect"
         ],
         "Resource": [
             "arn:aws:rds-db:ap-northeast-2:992382633459:dbuser:*/iamauth"
         ]
      }
   ]
}

-- 4. create role using the policy creatd in step 3

-- 5. Attach role created in step 4 to the EC2 instance used to connect to RDS

-- 6. Connect to the EC2 instance from step 5 and download the certificate authority (CA) that signs the DB server certificate for your DB.
-- For more Info: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html

-- To get a certificate bundle that contains both the intermediate and root certificates for an AWS Region,
wget https://truststore.pki.rds.amazonaws.com/ap-northeast-2/ap-northeast-2-bundle.pem

-- To get a certificate bundle that contains both the intermediate and root certificates for all AWS Regions,
wget https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem

-- 7. Using the token generated by AWS and the CA downloaded from step 6, connect to the RDS instance 
RDSHOST="my-rds-mysql-iam-authentication.chggc0wqagxj.ap-northeast-2.rds.amazonaws.com"
TOKEN="$(aws rds generate-db-auth-token --region ap-northeast-2 --hostname $RDSHOST --port 9306 --username iamauth)"
mysql --host=$RDSHOST --port=9306 --ssl-ca=/home/ec2-user/ap-northeast-2-bundle.pem --enable-cleartext-plugin --user=iamauth --password=$TOKEN
mysql --host=$RDSHOST --port=9306 --ssl-ca=/home/ec2-user/global-bundle.pem --enable-cleartext-plugin --user=iamauth --password=$TOKEN