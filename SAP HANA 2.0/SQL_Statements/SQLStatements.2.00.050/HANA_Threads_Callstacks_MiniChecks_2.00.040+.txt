WITH 

/* 

[NAME]

- HANA_Threads_Callstacks_MiniChecks_2.00.040+

[DESCRIPTION]

- Call stack mini checks

[SOURCE]

- SAP Note 1969700

[DETAILS AND RESTRICTIONS]

- HOST_SERVICE_THREAD_CALLSTACKS available with SAP HANA >= 2.00.040

[VALID FOR]

- Revisions:              >= 2.00.040

[SQL COMMAND VERSION]

- 2020/05/28:  1.0 (initial version)

[INVOLVED TABLES]

- HOST_SERVICE_THREAD_CALLSTACKS

[INPUT PARAMETERS]

- BEGIN_TIME

  Begin time

  '2018/12/05 14:05:00' --> Set begin time to 5th of December 2018, 14:05
  'C'                   --> Set begin time to current time
  'C-S900'              --> Set begin time to current time minus 900 seconds
  'C-M15'               --> Set begin time to current time minus 15 minutes
  'C-H5'                --> Set begin time to current time minus 5 hours
  'C-D1'                --> Set begin time to current time minus 1 day
  'C-W4'                --> Set begin time to current time minus 4 weeks
  'E-S900'              --> Set begin time to end time minus 900 seconds
  'E-M15'               --> Set begin time to end time minus 15 minutes
  'E-H5'                --> Set begin time to end time minus 5 hours
  'E-D1'                --> Set begin time to end time minus 1 day
  'E-W4'                --> Set begin time to end time minus 4 weeks
  'MIN'                 --> Set begin time to minimum (1000/01/01 00:00:00)

- END_TIME

  End time

  '2018/12/08 14:05:00' --> Set end time to 8th of December 2018, 14:05
  'C'                   --> Set end time to current time
  'C-S900'              --> Set end time to current time minus 900 seconds
  'C-M15'               --> Set end time to current time minus 15 minutes
  'C-H5'                --> Set end time to current time minus 5 hours
  'C-D1'                --> Set end time to current time minus 1 day
  'C-W4'                --> Set end time to current time minus 4 weeks
  'B+S900'              --> Set end time to begin time plus 900 seconds
  'B+M15'               --> Set end time to begin time plus 15 minutes
  'B+H5'                --> Set end time to begin time plus 5 hours
  'B+D1'                --> Set end time to begin time plus 1 day
  'B+W4'                --> Set end time to begin time plus 4 weeks
  'MAX'                 --> Set end time to maximum (9999/12/31 23:59:59)

- TIMEZONE

  Used timezone (both for input and output parameters)

  'SERVER'       --> Display times in SAP HANA server time
  'UTC'          --> Display times in UTC time

- CHECK_AREA

  Check area (based on AREA output column)

  'Communication' --> Only check for trace entries related to Communication area
  '%'             --> No restriction to a specific check area

- HOST

  Host name

  'saphana01'     --> Specic host saphana01
  'saphana%'      --> All hosts starting with saphana
  '%'             --> All hosts

- PORT

  Port number

  '30007'         --> Port 30007
  '%03'           --> All ports ending with '03'
  '%'             --> No restriction to ports

- MIN_ACTIVE_THREADS

  Threshold for minimum number of average active threads

  0.1             --> Only report call stacks that show up in average in at least 0.1 threads
  -1              --> No restriction related to number of active threads (i.e. any occurrence of a check module will be reported)

[OUTPUT PARAMETERS]

- CHID:            Call stack check ID (C<id>)
- AREA:            Problem area (e.g. 'Memory')
- DESCRIPTION:     Description of underlying activity indicated by the call stack module
- HOST:            Host name
- PORT:            Port
- COUNT:           Number of samples with related call stack module
- ACT_THR:         Average number of active threads
- LAST_OCCURRENCE: Last time when trace entry was written
- SAP_NOTE:        SAP Note
- DETAILS:         Call stack module

[EXAMPLE OUTPUT]

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|CHID |AREA          |DESCRIPTION                              |HOST       |PORT |COUNT |ACT_THR|LAST_OCCURRENCE    |SAP_NOTE|DETAILS                                                             |
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |TIME FRAME:   |2020/05/21 14:50:04 - 2020/05/28 14:50:04|           |     |      |       |                   |        |                                                                    |
|     |CHECK VERSION:|1.0.0 (2020/05/28)                       |           |     |      |       |                   |        |                                                                    |
|     |SAP Note:     |2313619                                  |           |     |      |       |                   |        |                                                                    |
|     |              |                                         |           |     |      |       |                   |        |                                                                    |
|C0100|Memory        |Proactive memory compactions             |saphana00xx|32003|  1195|   0.59|2020/05/28 12:09:52| 1999997|MemoryManager::ProactiveCompactionCallback::proactiveDefragmentation|
|     |              |                                         |saphana00yx|32003|   586|   0.29|2020/05/28 12:09:52| 1999997|MemoryManager::ProactiveCompactionCallback::proactiveDefragmentation|
|     |              |                                         |saphana001x|32003|   921|   0.45|2020/05/28 11:44:46| 1999997|MemoryManager::ProactiveCompactionCallback::proactiveDefragmentation|
|     |              |                                         |saphana002x|32003|  1506|   0.74|2020/05/28 12:09:52| 1999997|MemoryManager::ProactiveCompactionCallback::proactiveDefragmentation|
|     |              |                                         |saphana004x|32003|  1098|   0.54|2020/05/28 12:05:24| 1999997|MemoryManager::ProactiveCompactionCallback::proactiveDefragmentation|
|C0110|Memory        |ABAP timezone cache access               |saphana00xx|32003|    81|   0.04|2020/05/28 13:29:30| 1999998|ptime::Env::AbapSysTimeZoneSingleCache::AbapSysTimeZoneSingleCache  |
|     |              |                                         |saphana00yx|32003|    46|   0.02|2020/05/27 17:14:34| 1999998|ptime::Env::AbapSysTimeZoneSingleCache::AbapSysTimeZoneSingleCache  |
|     |              |                                         |saphana001x|32003| 11650|   5.78|2020/05/28 14:14:30| 1999998|ptime::Env::AbapSysTimeZoneSingleCache::AbapSysTimeZoneSingleCache  |
|     |              |                                         |saphana002x|32003|   481|   0.23|2020/05/28 14:29:33| 1999998|ptime::Env::AbapSysTimeZoneSingleCache::AbapSysTimeZoneSingleCache  |
|     |              |                                         |saphana004x|32003|   121|   0.06|2020/05/28 14:19:34| 1999998|ptime::Env::AbapSysTimeZoneSingleCache::AbapSysTimeZoneSingleCache  |
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*/

BASIS_INFO AS
( SELECT
    CASE
      WHEN BEGIN_TIME =    'C'                             THEN CURRENT_TIMESTAMP
      WHEN BEGIN_TIME LIKE 'C-S%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-S'))
      WHEN BEGIN_TIME LIKE 'C-M%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-M') * 60)
      WHEN BEGIN_TIME LIKE 'C-H%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-H') * 3600)
      WHEN BEGIN_TIME LIKE 'C-D%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-D') * 86400)
      WHEN BEGIN_TIME LIKE 'C-W%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-W') * 86400 * 7)
      WHEN BEGIN_TIME LIKE 'E-S%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-S'))
      WHEN BEGIN_TIME LIKE 'E-M%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-M') * 60)
      WHEN BEGIN_TIME LIKE 'E-H%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-H') * 3600)
      WHEN BEGIN_TIME LIKE 'E-D%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-D') * 86400)
      WHEN BEGIN_TIME LIKE 'E-W%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-W') * 86400 * 7)
      WHEN BEGIN_TIME =    'MIN'                           THEN TO_TIMESTAMP('1000/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS')
      WHEN SUBSTR(BEGIN_TIME, 1, 1) NOT IN ('C', 'E', 'M') THEN TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS')
    END BEGIN_TIME,
    CASE
      WHEN END_TIME =    'C'                             THEN CURRENT_TIMESTAMP
      WHEN END_TIME LIKE 'C-S%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-S'))
      WHEN END_TIME LIKE 'C-M%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-M') * 60)
      WHEN END_TIME LIKE 'C-H%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-H') * 3600)
      WHEN END_TIME LIKE 'C-D%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-D') * 86400)
      WHEN END_TIME LIKE 'C-W%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-W') * 86400 * 7)
      WHEN END_TIME LIKE 'B+S%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+S'))
      WHEN END_TIME LIKE 'B+M%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+M') * 60)
      WHEN END_TIME LIKE 'B+H%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+H') * 3600)
      WHEN END_TIME LIKE 'B+D%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+D') * 86400)
      WHEN END_TIME LIKE 'B+W%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+W') * 86400 * 7)
      WHEN END_TIME =    'MAX'                           THEN TO_TIMESTAMP('9999/12/31 00:00:00', 'YYYY/MM/DD HH24:MI:SS')
      WHEN SUBSTR(END_TIME, 1, 1) NOT IN ('C', 'B', 'M') THEN TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS')
    END END_TIME,
    TIMEZONE,
    CHECK_AREA,
    HOST,
    PORT,
    MIN_ACTIVE_THREADS,
    SAMPLE_INTERVAL_S
  FROM
  ( SELECT                  /* Modification section */
      'C-D7' BEGIN_TIME,                  /* YYYY/MM/DD HH24:MI:SS timestamp, C, C-S<seconds>, C-M<minutes>, C-H<hours>, C-D<days>, C-W<weeks>, E-S<seconds>, E-M<minutes>, E-H<hours>, E-D<days>, E-W<weeks>, MIN */
      'C' END_TIME,                    /* YYYY/MM/DD HH24:MI:SS timestamp, C, C-S<seconds>, C-M<minutes>, C-H<hours>, C-D<days>, C-W<weeks>, B+S<seconds>, B+M<minutes>, B+H<hours>, B+D<days>, B+W<weeks>, MAX */
      'SERVER' TIMEZONE,                              /* SERVER, UTC */
      '%' CHECK_AREA,
      '%' HOST,
      '%' PORT,
      0.02 MIN_ACTIVE_THREADS
    FROM
      DUMMY
  ),
  ( SELECT
      IFNULL(S.INTERVALLENGTH, 300) SAMPLE_INTERVAL_S
    FROM
      DUMMY LEFT OUTER JOIN
      _SYS_STATISTICS.STATISTICS_SCHEDULE S ON
        S.ID = 5057
  )
),
CALLSTACKS AS
( SELECT
    T.*
  FROM
    BASIS_INFO BI,
  ( SELECT
      SECONDS_BETWEEN(MIN(T.SERVER_TIMESTAMP) OVER (), MAX(T.SERVER_TIMESTAMP) OVER ()) TIMEFRAME_S,
      BI.SAMPLE_INTERVAL_S,
      BI.TIMEZONE,
      BI.CHECK_AREA,
      BI.MIN_ACTIVE_THREADS,
      T.*
    FROM
      BASIS_INFO BI,
      _SYS_STATISTICS.HOST_SERVICE_THREAD_CALLSTACKS T
    WHERE
      CASE BI.TIMEZONE WHEN 'UTC' THEN ADD_SECONDS(T.SERVER_TIMESTAMP, SECONDS_BETWEEN(CURRENT_TIMESTAMP, CURRENT_UTCTIMESTAMP)) ELSE T.SERVER_TIMESTAMP END BETWEEN BI.BEGIN_TIME AND BI.END_TIME
  ) T
  WHERE
    T.HOST LIKE BI.HOST AND
    TO_VARCHAR(T.PORT) LIKE BI.PORT
)
SELECT
  CASE WHEN ROW_NUMBER() OVER (PARTITION BY CHECK_ID ORDER BY HOST, PORT) = 1 THEN CASE WHEN CHECK_ID >= 100 THEN 'C' || LPAD(CHECK_ID, 4, '0') ELSE '' END ELSE '' END CHID,
  CASE WHEN ROW_NUMBER() OVER (PARTITION BY CHECK_ID ORDER BY HOST, PORT) = 1 THEN AREA ELSE '' END AREA,
  CASE WHEN ROW_NUMBER() OVER (PARTITION BY CHECK_ID ORDER BY HOST, PORT) = 1 THEN DESCRIPTION ELSE '' END DESCRIPTION,
  CASE WHEN ROW_NUMBER() OVER (PARTITION BY CHECK_ID, HOST ORDER BY PORT) = 1 THEN HOST ELSE '' END HOST,
  CASE WHEN PORT >= 0 THEN LPAD(PORT, 5) ELSE '' END PORT,
  CASE WHEN COUNT >= 0 THEN LPAD(COUNT, 6) ELSE '' END COUNT,
  CASE WHEN COUNT >= 0 THEN LPAD(ACT_THR, 7) ELSE '' END ACT_THR,
  LAST_OCCURRENCE,
  CASE WHEN SAP_NOTE >= 0 THEN LPAD(SAP_NOTE, 8) ELSE '' END SAP_NOTE,
  DETAILS
FROM
( SELECT
    0 CHECK_ID,
    'TIME FRAME:' AREA,
    TO_VARCHAR(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS') || CHAR(32) || '-' || CHAR(32) || TO_VARCHAR(LEAST(END_TIME, CURRENT_TIMESTAMP), 'YYYY/MM/DD HH24:MI:SS') DESCRIPTION,
    '' HOST,
    -1 PORT,
    -1 COUNT,
    -1 ACT_THR,
    '' LAST_OCCURRENCE,
    -1 SAP_NOTE,
    '' DETAILS
  FROM
    BASIS_INFO
  UNION ALL
  SELECT
    1 CHECK_ID,
    'CHECK VERSION:' AREA,
    '1.0.7 (2020/07/27)' DESCRIPTION,
    '' HOST,
    -1 PORT,
    -1 COUNT,
    -1 ACT_THR,
    '' LAST_OCCURRENCE,
    -1 SAP_NOTE,
    '' DETAILS
  FROM
    DUMMY
  UNION ALL
  SELECT
    2 CHECK_ID,
    'SAP Note:' AREA,
    '2313619' DESCRIPTION,
    '' HOST,
    -1 PORT,
    -1 ACT_THR,
    -1 COUNT,
    '' LAST_OCCURRENCE,
    -1 SAP_NOTE,
    '' DETAILS
  FROM
    DUMMY
  UNION ALL
  SELECT 3, '', '', '', -1, -1, -1, '', -1, '' FROM DUMMY
  UNION ALL
  SELECT
    CHECK_ID,
    AREA,
    DESCRIPTION,
    HOST,
    PORT,
    COUNT,
    ACT_THR,
    LAST_OCCURRENCE,
    SAP_NOTE,
    DETAILS
  FROM
  ( SELECT
      C.CHECK_ID,
      C.AREA,
      C.DESCRIPTION,
      T.HOST,
      T.PORT,
      COUNT(*) COUNT,
      TO_DECIMAL(MAP(TIMEFRAME_S, 0, 0, COUNT(*) * T.SAMPLE_INTERVAL_S / T.TIMEFRAME_S), 10, 4) ACT_THR,
      TO_VARCHAR(MAX(CASE T.TIMEZONE WHEN 'UTC' THEN ADD_SECONDS(T.SERVER_TIMESTAMP, SECONDS_BETWEEN(CURRENT_TIMESTAMP, CURRENT_UTCTIMESTAMP)) ELSE T.SERVER_TIMESTAMP END), 'YYYY/MM/DD HH24:MI:SS') LAST_OCCURRENCE,
      C.SAP_NOTE,
      MAX(C.FRAME_NAME) DETAILS,
      T.MIN_ACTIVE_THREADS
    FROM
      CALLSTACKS T,
      ( SELECT  100 CHECK_ID, 'Memory' AREA, 'Proactive memory compaction' DESCRIPTION, 'MemoryManager::ProactiveCompactionCallback::proactiveDefragmentation' FRAME_NAME, 1999997 SAP_NOTE FROM DUMMY UNION ALL
        SELECT  102, 'Memory',             'Memory unmapping',                                 'System::UX::munmap',                                                          1999997 FROM DUMMY UNION ALL
        SELECT  104, 'Memory',             'Memory remapping',                                 '__GI___mremap',                                                               1999997 FROM DUMMY UNION ALL
        SELECT  106, 'Memory',             'Memory compaction triggered from other service',   'MemoryManager::CompactionThread::run',                                        1999997 FROM DUMMY UNION ALL
        SELECT  107, 'Memory',             'Memory compaction triggered service-internally',   'MemoryManager::GlobalMemoryHandler::provideMemoryAndReturnSize',              1999997 FROM DUMMY UNION ALL
        SELECT  108, 'Memory',             'Threads supporting service-internal compaction',   'MemoryManager::IPMMReclaimMemory::supportReclaimMemoryIntern',                1999997 FROM DUMMY UNION ALL
        SELECT  110, 'Memory',             'ABAP timezone cache access',                       'ptime::Env::AbapSysTimeZoneSingleCache::AbapSysTimeZoneSingleCache',          1999998 FROM DUMMY UNION ALL
        SELECT  120, 'Memory',             'Data statistics advisor cache operation',          'DataStatistics::DataStatisticsAdviserCache',                                  2100040 FROM DUMMY UNION ALL
        SELECT  130, 'Memory',             'Allocator statistics access',                      'ltt::allocator_statistics::isVisible',                                        2100040 FROM DUMMY UNION ALL
        SELECT  200, 'Internal tasks',     'Currency conversion',                              'businessDB::Conversion::convert',                                             2100040 FROM DUMMY UNION ALL
        SELECT  300, 'Disks',              'Linux file descriptor manipulation (fcntl)',       '__libc_fcntl',                                                                1999930 FROM DUMMY UNION ALL
        SELECT  302, 'Disks',              'File state determination',                         'System::UX::stat',                                                            1999930 FROM DUMMY UNION ALL
        SELECT  303, 'Disks',              'File state determination with symlink handling',   'System::UX::lstat',                                                           1999930 FROM DUMMY UNION ALL
        SELECT  304, 'Disks',              'Renaming of a file',                               'FileAccess::fileRename',                                                      1999930 FROM DUMMY UNION ALL
        SELECT  306, 'Disks',              'Opening of a file',                                'FileAccess::fileOpen',                                                        1999930 FROM DUMMY UNION ALL
        SELECT  310, 'Disks',              'Disk information retrieval',                       'NameServer::TNSClient::getDiskInfo',                                          1999930 FROM DUMMY UNION ALL
        SELECT  400, 'Operating system',   'Exception unwinding',                              '_Unwind_RaiseException',                                                      2100040 FROM DUMMY UNION ALL
        SELECT  402, 'Operating system',   'Processing of kill command',                       '__GI_kill',                                                                   2100040 FROM DUMMY UNION ALL
        SELECT  410, 'Operating system',   'Timezone conversion',                              '__tz_convert',                                                                2100040 FROM DUMMY UNION ALL
        SELECT  412, 'Operating system',   'High resolution timer fallback used',              '__vdso_gettimeofday',                                                         2100040 FROM DUMMY UNION ALL
        SELECT  414, 'Operating system',   'Timer operating system call used',                 '__GI___clock_gettime',                                                        2100040 FROM DUMMY UNION ALL
        SELECT  420, 'Operating system',   'UUID generation',                                  'uuid_generate',                                                               1999998 FROM DUMMY UNION ALL
        SELECT  500, 'Traces',             'Database trace flush',                             'Diagnose::TraceStream::flushTraceBuffer',                                     2380176 FROM DUMMY UNION ALL
        SELECT  510, 'Traces',             'Call stack generation (diagnose)',                 'Diagnose::CallStackManager::saveStackLimited',                                2313619 FROM DUMMY UNION ALL
        SELECT  511, 'Traces',             'Call stack generation (exception)',                'ltt::exception::print_stack',                                                 2313619 FROM DUMMY UNION ALL
        SELECT  512, 'Traces',             'Call stack generation (context function)',         'Execution::spi::ContextFunctions::printStack',                                2313619 FROM DUMMY UNION ALL
        SELECT  600, 'Garbage collection', 'Row store table post drop activity',               'RowEngine::PostDropJob::run',                                                 1999998 FROM DUMMY UNION ALL
        SELECT  800, 'Sessions',           'Connection rollback',                              'ptime::Connection::rollback',                                                 2000000 FROM DUMMY UNION ALL
        SELECT  802, 'Sessions',           'External in-use count invalidation',               'ptime::Transaction::invalidate_external_inuse_count',                         2092196 FROM DUMMY UNION ALL
        SELECT  810, 'Sessions',           'Catalyst hash map access',                         'Catalyst::HashMap::reserve',                                                  2100040 FROM DUMMY UNION ALL
        SELECT  830, 'Sessions',           'Joining of thread contexts',                       'pthread_join',                                                                2114710 FROM DUMMY UNION ALL
        SELECT  900, 'Security',           'LDAP authentication',                              'Authentication::LDAP::Session::bind',                                         2929927 FROM DUMMY UNION ALL
        SELECT 1000, 'Locks',              'Nameserver lock file access',                      'TrexIpc::NameserverLock',                                                     2100296 FROM DUMMY UNION ALL
        SELECT 1002, 'Locks',              'SSL session cache access',                         'ssl_update_cache',                                                            1999998 FROM DUMMY UNION ALL
        SELECT 1010, 'Locks',              'Internal mutex lock',                              'pthread_mutex_lock',                                                          1999998 FROM DUMMY UNION ALL
        SELECT 1011, 'Locks',              'Yield lock wait',                                  '__GI___sched_yield',                                                          1999998 FROM DUMMY UNION ALL
        SELECT 1012, 'Locks',              'Spin lock wait',                                   'Synchronization::impl::SpinLock::_lock',                                      1999998 FROM DUMMY UNION ALL
        SELECT 1013, 'Locks',              'Futex lock wait',                                  'ptime::Futex::lock',                                                          1999998 FROM DUMMY UNION ALL
        SELECT 1020, 'Locks',              'Unlocking of mutex',                               'Synchronization::Mutex::unlock',                                              1999998 FROM DUMMY UNION ALL
        SELECT 1022, 'Locks',              'Maintenance of read write lock statistics',        'Synchronization::ReadWriteLockStatistics::ReadWriteLockStatistics',           1999998 FROM DUMMY UNION ALL
        SELECT 1100, 'Text search',        'Inxight tagged stemming',                          'inxight::tagged_stemming_implementation',                                     2800008 FROM DUMMY UNION ALL
        SELECT 1200, 'Partitioning',       'Record move between partitions',                   'TrexStore::UdivListManager::getEqualSSNUdivs',                                2044468 FROM DUMMY UNION ALL
        SELECT 1300, 'Trigger',            'Trigger execution',                                'TRexAPI::TriggerExecutors::execute',                                          1999930 FROM DUMMY UNION ALL
        SELECT 1400, 'Parsing',            'Llang interpreter activity',                       'ljit::llang::LlangInterpreter::run',                                          2124112 FROM DUMMY UNION ALL
        SELECT 1401, 'Parsing',            'Llang interpreter compilation',                    'ljit::llang::LlangInterpreterCompile::compile%ljit_llang_interpreter',        2124112 FROM DUMMY UNION ALL
        SELECT 2400, 'Table replication',  'Activation of asynchronous table replication',     'Replication::ReplicationManager::turnOnAsyncReplicationReplica',              2340450 FROM DUMMY
      ) C
    WHERE
      C.AREA LIKE T.CHECK_AREA AND
      UPPER(T.FRAME_NAME) LIKE '%' || UPPER(C.FRAME_NAME) || '%'
    GROUP BY
      C.CHECK_ID,
      C.AREA,
      C.DESCRIPTION,
      C.SAP_NOTE,
      T.HOST,
      T.PORT,
      T.TIMEFRAME_S,
      T.SAMPLE_INTERVAL_S,
      T.MIN_ACTIVE_THREADS
  )
  WHERE
  ( MIN_ACTIVE_THREADS = -1 OR ACT_THR >= MIN_ACTIVE_THREADS )
) T
WHERE
  COUNT IS NOT NULL
ORDER BY
  T.CHECK_ID,
  T.HOST,
  T.PORT
WITH HINT (IGNORE_PLAN_CACHE)