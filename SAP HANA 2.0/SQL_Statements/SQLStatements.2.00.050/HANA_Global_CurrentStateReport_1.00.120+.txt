WITH 

/*

[NAME]

- HANA_Global_CurrentStateReport_1.00.120+

[DESCRIPTION]

- Collection of current load and performance information

[SOURCE]

- SAP Note 1969700

[DETAILS AND RESTRICTIONS]


[VALID FOR]

- Revisions:              >= 1.00.120

[SQL COMMAND VERSION]

- 2019/05/02:  1.0 (initial version)
- 2019/05/04:  1.1 (dedicated 1.00.120+ version)

[INVOLVED TABLES]

- M_ACTIVE_STATEMENTS
- M_GARBAGE_COLLECTION_STATISTICS
- M_HOST_INFORMATION
- M_LOAD_HISTORY_SERVICE
- M_MVCC_OVERVIEW
- M_SERVICE_THREAD_CALLSTACKS
- M_SERVICE_THREADS
- M_SQL_PLAN_CACHE
- M_TABLE_SNAPSHOTS
- M_TRANSACTIONS
- M_WORKLOAD

[INPUT PARAMETERS]

- HOST

  Host name

  'saphana01'     --> Specific host saphana01
  'saphana%'      --> All hosts starting with saphana
  '%'             --> All hosts

- PORT

  Port number

  '30007'         --> Port 30007
  '%03'           --> All ports ending with '03'
  '%'             --> No restriction to ports

- EXCLUDE_PHANTOM_THREADS

  Possibility to exclude idle threads that are shown as "active" due to SAP HANA bugs

  'X'             --> Do not show idle threads that are shown as active threads
  ' '             --> No restriction of displayed threads

- EXCLUDE_CALLSTACKS

  Possibility to exclude the callstack section in the output

  'X'             --> Do not list thread callstacks
  ' '             --> List thread callstacks

- MAX_COL_LEN

  Maximum length of output columns

  40              --> Limit the size of potentially long output columns to 40 characters
  -1              --> No restriction related to output column length

- LINE_LENGTH

  Maximum displayed line size

  50              --> Lines are truncated at 50 characters
  -1              --> No line truncation

- AGGREGATE_BY

  Aggregation criteria (possible values can be found in comment)

  'HOST'          --> Aggregation by host
  'HOST, PORT'    --> Aggregation by host and port
  'NONE'          --> No aggregation

[OUTPUT PARAMETERS]

- LINE: Timeframe report (use monospaced output for optimal display)

[EXAMPLE OUTPUT]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|LINE                                                                                                                                                                         |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|*********************************                                                                                                                                            |
|* SAP HANA CURRENT STATE REPORT *                                                                                                                                            |
|*********************************                                                                                                                                            |
|                                                                                                                                                                             |
|Generated with:     SQL: "HANA_Global_CurrentStateReport" (SAP Note 1969700)                                                                                                 |
|Analysis time:      2019/05/02 12:32:33                                                                                                                                      |
|Database name:      C11                                                                                                                                                      |
|Revision level:     2.00.036.00.1547699771                                                                                                                                   |
|Configuration:      Host: all, port: all, aggregation: ALL                                                                                                                   |
|                                                                                                                                                                             |
|***************************                                                                                                                                                  |
|* LOAD AND STATE OVERVIEW *                                                                                                                                                  |
|***************************                                                                                                                                                  |
|                                                                                                                                                                             |
|CPU,       | CPU_CORES CPU_THREADS CPU_PCT SYS_PCT PING_MS MEM_PHYS_GB ALLOC_LIM_GB MEM_USED_GB UNLOADS                                                                      |
|memory     | ========= =========== ======= ======= ======= =========== ============ =========== =======                                                                      |
|           |       112         224       0       0      62        3022         1259         816       0                                                                      |
|                                                                                                                                                                             |
|Sessions,  | STMTS_PER_S PEND_SESSIONS   CONNS BUSY_CONNS TRANSACTIONS BLOCKED_TRANS THREADS ACT_THREADS WAIT_THREADS TOT_SQL ACT_SQL WAIT_SQL                               |
|threads,   | =========== ============= ======= ========== ============ ============= ======= =========== ============ ======= ======= ========                               |
|statements |           8             0     119          0           37             0     833           1            0     447       0        0                               |
|                                                                                                                                                                             |
|Disk I/O   | DATA_READ_MBPS DATA_READ_ACT_PCT DATA_WRT_MBPS DATA_WRT_ACT_PCT LOG_READ_MBPS LOG_READ_ACT_PCT LOG_WRT_MBPS LOG_WRT_ACT_PCT                                     |
|           | ============== ================= ============= ================ ============= ================ ============ ===============                                     |
|           |              0                 0             0                0             0                0            0               0                                     |
|                                                                                                                                                                             |
|MVCC,      | LOCAL_LOCK_START    GLOBAL_LOCK_START   HIST_FILES  VERSIONS COMM_ID_RANGE                                                                                      |
|garbage    | =================== =================== ========== ========= =============                                                                                      |
|collection |                     2019/05/02 12:32:32          0         0             0                                                                                      |
|                                                                                                                                                                             |
|Workload   | EXEC_PER_S COMP_PER_S TRANS_PER_S UPD_TRANS_PER_S COMMITS_PER_S ROLLBACKS_PER_S MEM_MB_PER_S                                                                    |
|           | ========== ========== =========== =============== ============= =============== ============                                                                    |
|           |         25          3           1               1             1               0            0                                                                    |
|                                                                                                                                                                             |
|******************                                                                                                                                                           |
|* MEMORY DETAILS *                                                                                                                                                           |
|******************                                                                                                                                                           |
|                                                                                                                                                                             |
|HEAP_ALLOCATOR                                                       MEM_USED_GB COUNT COMPONENT                                                                             |
|==================================================================== =========== ===== ========================================                                              |
|Pool/ColumnStore/Main/Dictionary/RoDict                                   346.07     1 Column Store Tables                                                                   |
|Pool/ColumnStore/Main/Index/Single                                        114.08     1 Column Store Tables                                                                   |
|Pool/ColumnStore/Main/Uncompressed                                         82.86     1 Column Store Tables                                                                   |
|Pool/ColumnStore/Main/Rowid                                                76.10     1 Column Store Tables                                                                   |
|Pool/ColumnStore/Main/Compressed/Indirect                                  38.16     1 Column Store Tables                                                                   |
|Pool/ColumnStore/Main/Compressed/Sparse                                    13.91     1 Column Store Tables                                                                   |
|Pool/PersistenceManager/UnifiedTableContainer                              13.65     1 Column Store Tables                                                                   |
|Pool/PersistenceManager/PersistentSpace/DefaultLPA/Page                    11.80     1 System                                                                                |
|                                                                                                                                                                             |
|*******************                                                                                                                                                          |
|* THREAD ACTIVITY *                                                                                                                                                          |
|*******************                                                                                                                                                          |
|                                                                                                                                                                             |
|   CONN_ID THREAD_ID DUR_S CPU_S THRE STATE    STATEMENT_HASH                                                                                                                |
|========== ========= ===== ===== ==== =======  ================================                                                                                              |
|        -1         0 26859   142 Main Running                                                                                                                                |
|                                                                                                                                                                             |
|**************                                                                                                                                                               |
|* CALLSTACKS *                                                                                                                                                               |
|**************                                                                                                                                                               |
|                                                                                                                                                                             |
|   CONN_ID THREAD_ID LVL MODULE_NAME                                                                                                                                         |
|========== ========= === ================================================================================                                                                    |
|        -1         0   1 __GI_epoll_pwait+0x80 (libc.so.6)                                                                                                                   |
|                       2 System::UX::epoll_pwait(int, epoll_event*, int, int, __sigset_t const*)+0x50 at SystemCallsUNIX.cpp:142 (libhdbbasis.so)                            |
|                       3 Stream::CompletionSet::epollImpl(int)+0x40 at CompletionSet.cpp:112 (libhdbbasis.so)                                                                |
|                       4 Stream::CompletionSet::poll(int)+0xc0 at CompletionSet.cpp:501 (libhdbbasis.so)                                                                     |
|                       5 comm::select(void*, int)+0x50 at commlibImpl.cpp:2518 (libhdbbasement.so)                                                                           |
|                       6 TrexNet::Responder::getNext()+0x266 at Responder.cpp:983 (libhdbbasement.so)                                                                        |
|                       7 nlsui_main+0x19bb at TrexService.cpp:690 (hdbxsengine)                                                                                              |
|                       8 System::mainWrapper(int, char**, char**)+0x72 at IsInMain.cpp:332 (libhdbbasis.so)                                                                  |
|                       9 __libc_start_main+0xf1 (libc.so.6)                                                                                                                  |
|                                                                                                                                                                             |
|****************************************                                                                                                                                     |
|* END OF SAP HANA CURRENT STATE REPORT *                                                                                                                                     |
|****************************************                                                                                                                                     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*/  

BASIS_INFO AS
( SELECT
    HOST,
    PORT,
    EXCLUDE_PHANTOM_THREADS,
    EXCLUDE_CALLSTACKS,
    MAX_COL_LEN,
    LINE_LENGTH,
    AGGREGATE_BY,
    HOST_LEN,
    CASE WHEN AGGREGATE_BY LIKE '%HOST%' OR AGGREGATE_BY = 'NONE' THEN RPAD('HOST', HOST_LEN + 1) ELSE '' END || CASE WHEN AGGREGATE_BY LIKE '%PORT%' OR AGGREGATE_BY = 'NONE' THEN RPAD('PORT', 6) ELSE '' END H1_PREFIX,
    CASE WHEN AGGREGATE_BY LIKE '%HOST%' OR AGGREGATE_BY = 'NONE' THEN RPAD('=', HOST_LEN, '=') || CHAR(32) ELSE '' END || CASE WHEN AGGREGATE_BY LIKE '%PORT%' OR AGGREGATE_BY = 'NONE' THEN RPAD('=', 5, '=') || CHAR(32) ELSE '' END H2_PREFIX
  FROM
  ( SELECT                                   /* Modification section */
      '%' HOST,
      '%' PORT,
      'X' EXCLUDE_PHANTOM_THREADS,
      ' ' EXCLUDE_CALLSTACKS,
      40 MAX_COL_LEN,
      300 LINE_LENGTH,
      'ALL' AGGREGATE_BY              /* HOST, PORT or comma separated combinations, NONE for no aggregation, ALL for complete aggregation */
    FROM
      DUMMY
  ),
  ( SELECT MAX(LENGTH(HOST)) HOST_LEN FROM M_HOST_INFORMATION )
),
LOAD AS
( SELECT
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN L.HOST             ELSE 'any' END HOST,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(L.PORT) ELSE 'any' END PORT,
    TO_DECIMAL(MAX(L.CPU), 10, 0) CPU,
    TO_DECIMAL(MAX(L.SYSTEM_CPU), 10, 0) SYSTEM_CPU,
    TO_DECIMAL(MAX(L.MEMORY_USED / 1024 / 1024 / 1024), 10, 0) MEM_USED_GB,
    TO_DECIMAL(MAX(L.MEMORY_ALLOCATION_LIMIT / 1024 / 1024 / 1024), 10, 0) ALLOC_LIM_GB,
    TO_DECIMAL(MAX(L.PING_TIME), 10, 0) PING_MS,
    TO_DECIMAL(GREATEST(0, SUM(L.CONNECTION_COUNT)), 10, 0) CONNECTION_COUNT,
    TO_DECIMAL(GREATEST(0, SUM(L.TRANSACTION_COUNT)), 10, 0) TRANSACTION_COUNT,
    TO_DECIMAL(GREATEST(0, SUM(L.BLOCKED_TRANSACTION_COUNT)), 10, 0) BLOCKED_TRANSACTION_COUNT,
    TO_DECIMAL(GREATEST(0, SUM(L.STATEMENT_COUNT) / MAX(L.INTERVAL_S)), 10, 0) STMTS_PER_S,
    TO_DECIMAL(GREATEST(0, MAX(L.COMMIT_ID_RANGE)), 10, 0) COMMIT_ID_RANGE,
    TO_DECIMAL(GREATEST(0, SUM(L.MVCC_VERSION_COUNT)), 10, 0) VERSIONS,
    TO_DECIMAL(GREATEST(0, SUM(L.PENDING_SESSION_COUNT)), 10, 0) PENDING_SESSIONS,
    TO_DECIMAL(GREATEST(0, SUM(L.CS_UNLOAD_COUNT)), 10, 0) UNLOADS,
    TO_DECIMAL(GREATEST(0, SUM(L.ACTIVE_THREAD_COUNT)), 10, 0) ACT_THREADS,
    TO_DECIMAL(GREATEST(0, SUM(L.WAITING_THREAD_COUNT)), 10, 0) WAIT_THREADS,
    TO_DECIMAL(GREATEST(0, SUM(L.TOTAL_THREAD_COUNT)), 10, 0) TOT_THREADS,
    TO_DECIMAL(GREATEST(0, SUM(L.ACTIVE_SQL_EXECUTOR_COUNT)), 10, 0) ACT_SQL,
    TO_DECIMAL(GREATEST(0, SUM(L.WAITING_SQL_EXECUTOR_COUNT)), 10, 0) WAIT_SQL,
    TO_DECIMAL(GREATEST(0, SUM(L.TOTAL_SQL_EXECUTOR_COUNT)), 10, 0) TOT_SQL,
    TO_DECIMAL(SUM(L.DATA_READ_SIZE) / 1024 / 1024 / MAX(L.INTERVAL_S), 10, 0) DATA_READ_MBPS,
    TO_DECIMAL(LEAST(100, MAX(L.DATA_READ_TIME) / 1000000 / MAX(L.INTERVAL_S) * 100), 10, 0) DATA_READ_ACT_PCT,
    TO_DECIMAL(SUM(L.DATA_WRITE_SIZE) / 1024 / 1024 / MAX(L.INTERVAL_S), 10, 0) DATA_WRT_MBPS,
    TO_DECIMAL(LEAST(100, MAX(L.DATA_WRITE_TIME) / 1000000 / MAX(L.INTERVAL_S) * 100), 10, 0) DATA_WRT_ACT_PCT,
    TO_DECIMAL(SUM(L.LOG_READ_SIZE) / 1024 / 1024 / MAX(L.INTERVAL_S), 10, 0) LOG_READ_MBPS,
    TO_DECIMAL(LEAST(100, MAX(L.LOG_READ_TIME) / 1000000 / MAX(L.INTERVAL_S) * 100), 10, 0) LOG_READ_ACT_PCT,
    TO_DECIMAL(SUM(L.LOG_WRITE_SIZE) / 1024 / 1024 / MAX(L.INTERVAL_S), 10, 0) LOG_WRT_MBPS,
    TO_DECIMAL(LEAST(100, MAX(L.LOG_WRITE_TIME) / 1000000 / MAX(L.INTERVAL_S) * 100), 10, 0) LOG_WRT_ACT_PCT,
    MAX(CPU_CORES) CPU_CORES,
    MAX(CPU_THREADS) CPU_THREADS,
    MAX(MEM_PHYS_GB) MEM_PHYS_GB
  FROM
    BASIS_INFO BI,
  ( SELECT
      L.*,
      H.CPU_CORES,
      H.CPU_THREADS,
      H.MEM_PHYS_GB,
      NANO100_BETWEEN(LEAD(L.TIME, 1) OVER (PARTITION BY L.HOST, L.PORT ORDER BY L.TIME DESC), L.TIME) / 10000000 INTERVAL_S,
      ROW_NUMBER() OVER (PARTITION BY L.HOST, L.PORT ORDER BY L.TIME DESC) ROW_NO
    FROM
      M_LOAD_HISTORY_SERVICE L,
    ( SELECT
        HOST,
        MAX(MAP(KEY, 'cpu_cores', VALUE)) CPU_CORES,
        MAX(MAP(KEY, 'cpu_threads', VALUE)) CPU_THREADS,
        TO_DECIMAL(MAX(MAP(KEY, 'mem_phys', VALUE)) / 1024 / 1024 / 1024, 10, 0) MEM_PHYS_GB
      FROM
        M_HOST_INFORMATION
      GROUP BY
        HOST
    ) H
    WHERE
      H.HOST = L.HOST AND
      L.TIME >= ADD_SECONDS(CURRENT_TIMESTAMP, -3600)
  ) L
  WHERE
    L.HOST LIKE BI.HOST AND
    TO_VARCHAR(L.PORT) LIKE BI.PORT AND
    ROW_NO = 1
  GROUP BY
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN L.HOST             ELSE 'any' END,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(L.PORT) ELSE 'any' END
),
WORKLOAD AS
( SELECT
    CASE WHEN BI.AGGREGATE_BY = 'NONE' OR INSTR(BI.AGGREGATE_BY, 'HOST') != 0 THEN W.HOST             ELSE MAP(BI.HOST, '%', 'any', BI.HOST) END HOST,
    CASE WHEN BI.AGGREGATE_BY = 'NONE' OR INSTR(BI.AGGREGATE_BY, 'PORT') != 0 THEN TO_VARCHAR(W.PORT) ELSE MAP(BI.PORT, '%', 'any', BI.PORT) END PORT,
    TO_DECIMAL(SUM(W.CURRENT_EXECUTION_RATE) / 60, 10, 0) EXEC_PER_S,
    TO_DECIMAL(SUM(W.CURRENT_COMPILATION_RATE) / 60, 10, 0) COMP_PER_S,
    TO_DECIMAL(SUM(W.CURRENT_TRANSACTION_RATE) / 60, 10, 0) TRANS_PER_S,
    TO_DECIMAL(SUM(W.CURRENT_UPDATE_TRANSACTION_RATE) / 60, 10, 0) UPD_TRANS_PER_S,
    TO_DECIMAL(SUM(W.CURRENT_COMMIT_RATE) / 60, 10, 0) COMMITS_PER_S,
    TO_DECIMAL(SUM(W.CURRENT_ROLLBACK_RATE) / 60, 10, 0) ROLLBACKS_PER_S,
    TO_DECIMAL(SUM(W.CURRENT_MEMORY_USAGE_RATE) / 1024 / 1024 / 60, 10, 0) MEM_MB_PER_S
  FROM
    BASIS_INFO BI,
    M_WORKLOAD W
  WHERE
    W.HOST LIKE BI.HOST AND
    TO_VARCHAR(W.PORT) LIKE BI.PORT
  GROUP BY
    CASE WHEN BI.AGGREGATE_BY = 'NONE' OR INSTR(BI.AGGREGATE_BY, 'HOST') != 0 THEN W.HOST             ELSE MAP(BI.HOST, '%', 'any', BI.HOST) END,
    CASE WHEN BI.AGGREGATE_BY = 'NONE' OR INSTR(BI.AGGREGATE_BY, 'PORT') != 0 THEN TO_VARCHAR(W.PORT) ELSE MAP(BI.PORT, '%', 'any', BI.PORT) END
),
THREADS AS
( SELECT
    HOST,
    PORT,
    CONN_ID,
    THREAD_ID,
    STATEMENT_HASH,
    THREAD_TYPE,
    THREAD_METHOD,
    THREAD_DETAIL,
    THREAD_STATE,
    LOCK_NAME,
    DB_USER,
    APP_USER,
    APP_NAME,
    APP_SOURCE,
    DUR_S,
    CPU_S,
    MAP(MAX_COL_LEN, -1, THREAD_TYPE_LEN, LEAST(MAX_COL_LEN, THREAD_TYPE_LEN)) THREAD_TYPE_LEN,
    MAP(MAX_COL_LEN, -1, THREAD_STATE_LEN, LEAST(MAX_COL_LEN, THREAD_STATE_LEN)) THREAD_STATE_LEN,
    MAP(MAX_COL_LEN, -1, THREAD_METHOD_LEN, LEAST(MAX_COL_LEN, THREAD_METHOD_LEN)) THREAD_METHOD_LEN,
    MAP(MAX_COL_LEN, -1, THREAD_DETAIL_LEN, LEAST(MAX_COL_LEN, THREAD_DETAIL_LEN)) THREAD_DETAIL_LEN,
    MAP(MAX_COL_LEN, -1, LOCK_NAME_LEN, LEAST(MAX_COL_LEN, LOCK_NAME_LEN)) LOCK_NAME_LEN,
    MAP(MAX_COL_LEN, -1, APP_USER_LEN, LEAST(MAX_COL_LEN, APP_USER_LEN)) APP_USER_LEN,
    MAP(MAX_COL_LEN, -1, APP_NAME_LEN, LEAST(MAX_COL_LEN, APP_NAME_LEN)) APP_NAME_LEN,
    MAP(MAX_COL_LEN, -1, APP_SOURCE_LEN, LEAST(MAX_COL_LEN, APP_SOURCE_LEN)) APP_SOURCE_LEN
  FROM
  ( SELECT
      HOST,
      PORT,
      CONN_ID,
      THREAD_ID,
      STATEMENT_HASH,
      THREAD_TYPE,
      THREAD_METHOD,
      THREAD_DETAIL,
      THREAD_STATE,
      LOCK_NAME,
      DB_USER,
      APP_USER,
      APP_NAME,
      APP_SOURCE,
      DUR_S,
      CPU_S,
      MAX_COL_LEN,
      MAX(LENGTH(THREAD_TYPE)) OVER () THREAD_TYPE_LEN,
      MAX(LENGTH(THREAD_STATE)) OVER () THREAD_STATE_LEN,
      MAX(LENGTH(THREAD_METHOD)) OVER () THREAD_METHOD_LEN,
      MAX(LENGTH(THREAD_DETAIL)) OVER () THREAD_DETAIL_LEN,
      MAX(LENGTH(LOCK_NAME)) OVER () LOCK_NAME_LEN,
      MAX(LENGTH(APP_USER)) OVER () APP_USER_LEN,
      MAX(LENGTH(APP_NAME)) OVER () APP_NAME_LEN,
      MAX(LENGTH(APP_SOURCE)) OVER () APP_SOURCE_LEN
    FROM
    ( SELECT
        T.HOST,
        TO_VARCHAR(T.PORT) PORT,
        T.CONNECTION_ID CONN_ID,
        T.THREAD_ID,
        CASE
          WHEN T.STATEMENT_HASH = CHAR(63) THEN 'no SQL (' || MAP(T.THREAD_METHOD, CHAR(63), T.THREAD_TYPE, T.THREAD_METHOD) || ')'
          ELSE T.STATEMENT_HASH
        END STATEMENT_HASH,
        CASE
          WHEN T.THREAD_TYPE LIKE 'JobWrk%' THEN 'JobWorker'
          ELSE T.THREAD_TYPE
        END THREAD_TYPE,
        T.THREAD_METHOD,
        T.THREAD_DETAIL,
        T.THREAD_STATE,
        SUBSTR(T.LOCK_WAIT_NAME, MAP(INSTR(T.LOCK_WAIT_NAME, ':' || CHAR(32)), 0, 1, INSTR(T.LOCK_WAIT_NAME, ':' || CHAR(32)) + 2)) LOCK_NAME,
        T.USER_NAME DB_USER,
        T.APPLICATION_USER_NAME APP_USER,
        T.APPLICATION_NAME APP_NAME,
        T.APPLICATION_SOURCE APP_SOURCE,
        TO_DECIMAL(ROUND(T.DURATION / 1000), 10, 0) DUR_S,
        TO_DECIMAL(ROUND(T.CPU_TIME_SELF / 1000000), 10, 0) CPU_S,
        BI.MAX_COL_LEN
      FROM
        BASIS_INFO BI,
        ( SELECT
            T.*,
            T.LOCK_WAIT_NAME LOCK_NAME
          FROM
            M_SERVICE_THREADS T
        ) T
      WHERE
        T.HOST LIKE BI.HOST AND
        TO_VARCHAR(T.PORT) LIKE BI.PORT AND
        T.IS_ACTIVE = 'TRUE' AND
        T.CONNECTION_ID != CURRENT_CONNECTION AND
        ( BI.EXCLUDE_PHANTOM_THREADS = ' ' OR NOT
          ( T.THREAD_TYPE = 'AgentPingThread'                     AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'DPPeriodicThreadWaitSemaphore'                                  OR
            T.THREAD_TYPE = 'BackupMonitor_TransferThread'        AND T.THREAD_STATE = 'Sleeping'                                                                                                     OR
            T.THREAD_TYPE = 'ChildIOThreads::ErrorStream'         AND T.THREAD_STATE = 'Running'                                                                                                      OR
            T.THREAD_TYPE = 'ChildIOThreads::OutputStream'        AND T.THREAD_STATE = 'Running'                                                                                                      OR
            T.THREAD_TYPE LIKE 'DPDistributor%'                   AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'DPCommitTranPersistentDistributorQueueReaderAvailableSemaphore' OR
            T.THREAD_TYPE LIKE 'DPReceiverCleaner%'               AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'DPPersistentTranDataCleanerDataAvailableSemaphore'              OR
            T.THREAD_TYPE LIKE 'DPReceiverWriter%'                AND T.THREAD_STATE LIKE 'ConditionalVar% Wait'   AND T.LOCK_NAME = 'DPReceiverInboundQueueEmptyCond'                                OR
            T.THREAD_TYPE = 'Generic'                             AND T.THREAD_STATE = 'Running'                                                                                                      OR
            T.THREAD_TYPE = 'IndexingQueue'                       AND T.THREAD_STATE = 'Sleeping'                                                                                                     OR
            T.THREAD_TYPE = 'JobWorker'                           AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'DPReceiverHouseKeepingTaskAvailableSemaphore'                   OR
            T.THREAD_TYPE = 'LogRecovery'                         AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'LogRecoveryPointInTimeQueue'                                    OR
            T.THREAD_TYPE = 'MaintenanceThread'                   AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'DPPeriodicThreadWaitSemaphore'                                  OR
            T.THREAD_TYPE = 'Native'                              AND T.THREAD_DETAIL LIKE '%sysv_open_semaphore%'                                                                                    OR
            T.THREAD_TYPE = 'PostCommitExecutor'                  AND T.THREAD_STATE LIKE 'ConditionalVar% Wait'   AND T.LOCK_NAME = 'RegularTaskQueueCV'                                             OR
            T.THREAD_TYPE = 'PriPostCommitExecutor'               AND T.THREAD_STATE LIKE 'ConditionalVar% Wait'   AND T.LOCK_NAME = 'PrioritizedTaskQueueCV'                                         OR
            T.THREAD_TYPE = 'StatsThread'                         AND T.THREAD_STATE LIKE 'ConditionalVar% Wait'   AND T.LOCK_NAME = 'DPStatsThreadCond'                                              OR
            T.THREAD_TYPE = 'PushBufferIntoReplayThread'          AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'system replication: push buffer into replay semaphore'          OR
            T.THREAD_TYPE = 'SecondarySlaveLogPositionSendThread' AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'system replication: slave log position send semaphore'          OR
            T.THREAD_TYPE = 'SystemReplicationAsyncLogSender'     AND T.THREAD_STATE = 'Semaphore Wait'            AND T.LOCK_NAME = 'system replication: AsyncLogBufferHandlerQueueSem'
          )
        )
      )
  )
),
ACTIVE_STATEMENTS AS
( SELECT
    HOST,
    PORT,
    CONNECTION_ID,
    STATEMENT_ID,
    STATEMENT_STATUS,
    STATEMENT_STRING,
    LAST_EXECUTED_TIME,
    START_TIME,
    DURATION_S,
    IDLE_S,
    MEM_MB,
    START_MVCC_TIMESTAMP,
    STATEMENT_HASH,
    IFNULL(APP_USER, '') APP_USER,
    MAX(LENGTH(IFNULL(APP_USER, ''))) OVER () APP_USER_LEN
  FROM
  ( SELECT DISTINCT
      A.HOST,
      A.PORT,
      A.CONNECTION_ID,
      A.STATEMENT_ID,
      A.STATEMENT_STATUS,
      REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TO_VARCHAR(SUBSTR(A.STATEMENT_STRING, 1, 5000)), CHAR(10), CHAR(32)), CHAR(13), CHAR(32)), CHAR(9), CHAR(32)), 
        CHAR(32) || CHAR(32), CHAR(32)), CHAR(32) || CHAR(32), CHAR(32)), CHAR(32) || CHAR(32), CHAR(32)) STATEMENT_STRING,
      A.LAST_EXEC_TIME LAST_EXECUTED_TIME,
      TO_VARCHAR(A.LAST_EXEC_TIME, 'YYYY/MM/DD HH24:MI:SS') START_TIME,
      TO_DECIMAL(GREATEST(0, SECONDS_BETWEEN(A.LAST_EXEC_TIME, CURRENT_TIMESTAMP)), 10, 0) DURATION_S,
      TO_DECIMAL(GREATEST(0, SECONDS_BETWEEN(A.LAST_ACTION_TIME, CURRENT_TIMESTAMP)), 10, 0) IDLE_S,
      TO_DECIMAL(A.USED_MEMORY_SIZE / 1024 / 1024, 10, 0) MEM_MB,
      A.START_MVCC_TIMESTAMP,
      SP.STATEMENT_HASH,
      ( SELECT MAX(APP_USER) FROM THREADS T WHERE T.CONN_ID = A.CONNECTION_ID ) APP_USER
    FROM
      BASIS_INFO BI,
    ( SELECT
        IFNULL(LAST_EXECUTED_TIME, LAST_ACTION_TIME) LAST_EXEC_TIME,
        A.*
      FROM
        M_ACTIVE_STATEMENTS A 
    ) A LEFT OUTER JOIN
      M_SQL_PLAN_CACHE SP ON
        SP.PLAN_ID = A.PLAN_ID
    WHERE
      A.HOST LIKE BI.HOST AND
      TO_VARCHAR(A.PORT) LIKE BI.PORT AND
      ( TO_DECIMAL(GREATEST(0, SECONDS_BETWEEN(A.LAST_EXECUTED_TIME, CURRENT_TIMESTAMP)), 10, 0) > 0 OR
        ( SELECT COUNT(*) FROM THREADS T WHERE T.STATEMENT_HASH = SP.STATEMENT_HASH ) >= 3
      )
  )
),
SQL_CACHE AS
( SELECT
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN C.HOST             ELSE 'any' END HOST,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(C.PORT) ELSE 'any' END PORT,
    C.STATEMENT_HASH,
    SUM(C.EXECUTION_COUNT) EXECUTIONS,
    TO_DECIMAL(MAP(SUM(C.EXECUTION_COUNT), 0, 0, SUM(C.TOTAL_RESULT_RECORD_COUNT) / SUM(C.EXECUTION_COUNT)), 10, 2) AVG_RECORDS,
    TO_DECIMAL(SUM(C.TOTAL_CURSOR_DURATION) / 1000000, 10, 2) TOT_CURS_S,
    TO_DECIMAL(SUM(C.TOTAL_EXECUTION_TIME) / 1000000, 10, 2) TOT_EXEC_S,
    TO_DECIMAL(SUM(C.AVG_CURSOR_DURATION) / 1000, 10, 2) AVG_CURS_MS,
    TO_DECIMAL(SUM(C.AVG_EXECUTION_TIME) / 1000, 10, 2) AVG_EXEC_MS,
    TO_DECIMAL(SUM(C.AVG_EXECUTION_MEMORY_SIZE) / 1024 / 1024, 10, 0) AVG_MEM_MB,
    TO_DECIMAL(MAP(SUM(C.EXECUTION_COUNT), 0, 0, SUM(C.TOTAL_LOCK_WAIT_DURATION) / SUM(C.EXECUTION_COUNT)) / 1000, 10, 2) AVG_LOCK_MS,
    TO_DECIMAL(SUM(C.AVG_PREPARATION_TIME) / 1000, 10, 2) AVG_PREP_MS,
    MAX('') APP_NAME,
    MAX('') APP_SOURCE,
    MAX(LENGTH(MAX(''))) OVER () APP_NAME_LEN
  FROM
    BASIS_INFO BI,
    ( SELECT DISTINCT STATEMENT_HASH FROM ( SELECT STATEMENT_HASH FROM ACTIVE_STATEMENTS UNION SELECT STATEMENT_HASH FROM THREADS ) ) A,
    M_SQL_PLAN_CACHE C
  WHERE
    A.STATEMENT_HASH = C.STATEMENT_HASH
  GROUP BY
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN C.HOST             ELSE 'any' END,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(C.PORT) ELSE 'any' END,
    C.STATEMENT_HASH
),
JOB_PROGRESS AS
( SELECT
    J.HOST,
    J.PORT,
    J.JOB_NAME,
    J.CURRENT_PROGRESS || CHAR(32) || 'of' || CHAR(32) || J.MAX_PROGRESS PROGRESS,
    TO_VARCHAR(J.START_TIME, 'YYYY/MM/DD HH24:MI:SS') START_TIME,
    TO_DECIMAL(GREATEST(0, SECONDS_BETWEEN(J.START_TIME, CURRENT_TIMESTAMP)), 10, 0) DURATION_S,
    J.SCHEMA_NAME,
    J.OBJECT_NAME,
    J.PROGRESS_DETAIL,
    MAX(LENGTH(J.SCHEMA_NAME)) OVER () SCHEMA_NAME_LEN,
    MAX(LENGTH(J.OBJECT_NAME)) OVER () OBJECT_NAME_LEN,
    MAX(LENGTH(J.PROGRESS_DETAIL)) OVER () PROGRESS_DETAIL_LEN
  FROM
    BASIS_INFO BI,
    M_JOB_PROGRESS J
  WHERE
    J.HOST LIKE BI.HOST AND
    TO_VARCHAR(J.PORT) LIKE BI.PORT
),
HEAP_ALLOCATORS AS
( SELECT
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN H.HOST             ELSE 'any' END HOST,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(H.PORT) ELSE 'any' END PORT,
    H.CATEGORY HEAP_ALLOCATOR,
    TO_DECIMAL(SUM(H.EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 / 1024, 10, 2) MEM_USED_GB,
    COUNT(*) COUNT,
    MAX(H.COMPONENT) COMPONENT,
    MAX(LENGTH(H.CATEGORY)) OVER () HEAP_ALLOCATOR_LEN
  FROM
    BASIS_INFO BI,
    M_HEAP_MEMORY H,
    ( SELECT MAX(ALLOC_LIM_GB) ALLOC_LIM_GB FROM LOAD ) L
  WHERE
    H.HOST LIKE BI.HOST AND
    TO_VARCHAR(H.PORT) LIKE BI.PORT AND
    H.EXCLUSIVE_SIZE_IN_USE / 1024 / 1024 / 1024 >= L.ALLOC_LIM_GB / 250
  GROUP BY
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN H.HOST             ELSE 'any' END,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(H.PORT) ELSE 'any' END,
    H.CATEGORY
  HAVING
    SUM(H.EXCLUSIVE_SIZE_IN_USE) / 1024 / 1024 / 1024 >= 1
),
GARBAGE_COLLECTION AS
( SELECT
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN L.HOST             ELSE 'any' END HOST,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(L.PORT) ELSE 'any' END PORT,
    IFNULL(TO_VARCHAR(MIN(MAP(L.LAYER, 'GLOBAL', L.START_TIME)), 'YYYY/MM/DD HH24:MI:SS'), '') GLOBAL_LOCK_TIME,
    IFNULL(TO_VARCHAR(MIN(MAP(L.LAYER, 'LOCAL', L.START_TIME)), 'YYYY/MM/DD HH24:MI:SS'), '') LOCAL_LOCK_TIME,
    IFNULL(TO_VARCHAR(SUM(MAP(L.LAYER, 'HISTORY_COUNT', L.VALUE))), '') HISTORY_FILES
  FROM
    BASIS_INFO BI,
  ( SELECT
      'GLOBAL' LAYER,
      T.HOST,
      T.PORT,
      MIN(T.START_TIME) START_TIME,
      -1 VALUE
    FROM
      M_MVCC_OVERVIEW M,
      M_TRANSACTIONS T
    WHERE
      M.MIN_MVCC_SNAPSHOT_TIMESTAMP = T.MIN_MVCC_SNAPSHOT_TIMESTAMP AND
      M.HOST = T.HOST AND
      M.PORT = T.PORT
    GROUP BY
      T.HOST,
      T.PORT
    UNION ALL
    SELECT
      'LOCAL' LAYER,
      A.HOST,
      A.PORT,
      MIN(A.LAST_EXECUTED_TIME) START_TIME,
      -1 VALUE
    FROM
      M_TABLE_SNAPSHOTS S,
      ACTIVE_STATEMENTS A
    WHERE
      S.MIN_MVCC_SNAPSHOT_TIMESTAMP = A.START_MVCC_TIMESTAMP AND
      S.HOST = A.HOST AND
      S.PORT = A.PORT
    GROUP BY
      A.HOST,
      A.PORT
    UNION ALL
    SELECT
      'HISTORY_COUNT' LAYER,
      HOST,
      PORT,
      CURRENT_TIMESTAMP,
      SUM(HISTORY_COUNT) VALUE
    FROM
      M_GARBAGE_COLLECTION_STATISTICS
    GROUP BY
      HOST,
      PORT
  ) L
  GROUP BY
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN L.HOST             ELSE 'any' END,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(L.PORT) ELSE 'any' END
),
CALLSTACKS AS
( SELECT DISTINCT
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN C.HOST             ELSE 'any' END HOST,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(C.PORT) ELSE 'any' END PORT,
    T.CONN_ID,
    C.THREAD_ID,
    C.FRAME_LEVEL,
    C.FRAME_NAME
  FROM
    BASIS_INFO BI,
    M_SERVICE_THREAD_CALLSTACKS C,
    THREADS T
  WHERE
    BI.EXCLUDE_CALLSTACKS = ' ' AND
    C.HOST LIKE BI.HOST AND
    TO_VARCHAR(C.PORT) LIKE BI.PORT AND
    C.HOST = T.HOST AND
    C.PORT = T.PORT AND
    C.THREAD_ID = T.THREAD_ID
),
JOBEXECUTORS AS
( SELECT
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN J.HOST             ELSE 'any' END HOST,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(J.PORT) ELSE 'any' END PORT,
    MAX(MAX_CONCURRENCY) MAX_CONCURRENCY,
    MAX(TOTAL_WORKER_COUNT) TOTAL_WORKERS,
    MAX(QUEUED_WAITING_JOB_COUNT) QUEUED_WORKERS
  FROM
    BASIS_INFO BI,
    M_JOBEXECUTORS J
  WHERE
    J.HOST LIKE BI.HOST AND
    J.PORT LIKE BI.PORT
  GROUP BY
    CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN J.HOST             ELSE 'any' END,
    CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(J.PORT) ELSE 'any' END
),
TRANSACTIONAL_LOCK_WAITS AS
( SELECT
    HOST,
    PORT,
    BLOCKED_CONN_ID,
    BLOCKING_CONN_ID,
    WAIT_S,
    IFNULL(SCHEMA_NAME, '') SCHEMA_NAME,
    IFNULL(TABLE_NAME, '') TABLE_NAME,
    LOCK_TYPE,
    LOCK_MODE,
    IFNULL(BLOCKING_APP_USER, '') BLOCKING_APP_USER,
    IFNULL(BLOCKING_APP_NAME, '') BLOCKING_APP_NAME,
    IFNULL(BLOCKING_APP_SOURCE, '') BLOCKING_APP_SOURCE,
    IFNULL(MAX(LENGTH(SCHEMA_NAME)) OVER (), 0) SCHEMA_NAME_LEN,
    IFNULL(MAX(LENGTH(TABLE_NAME)) OVER (), 0) TABLE_NAME_LEN,
    IFNULL(MAX(LENGTH(BLOCKING_APP_USER)) OVER (), 0) BLOCKING_APP_USER_LEN,
    IFNULL(MAX(LENGTH(BLOCKING_APP_NAME)) OVER (), 0) BLOCKING_APP_NAME_LEN,
    IFNULL(MAX(LENGTH(BLOCKING_APP_SOURCE)) OVER (), 0) BLOCKING_APP_SOURCE_LEN
  FROM
  ( SELECT
      CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN B.HOST             ELSE 'any' END HOST,
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(B.PORT) ELSE 'any' END PORT,
      B.BLOCKED_CONNECTION_ID BLOCKED_CONN_ID,
      B.LOCK_OWNER_CONNECTION_ID BLOCKING_CONN_ID,
      TO_DECIMAL(GREATEST(0, SECONDS_BETWEEN(B.BLOCKED_TIME, CURRENT_TIMESTAMP)), 10, 0) WAIT_S,
      B.WAITING_SCHEMA_NAME SCHEMA_NAME,
      B.WAITING_TABLE_NAME TABLE_NAME,
      B.LOCK_TYPE,
      B.LOCK_MODE,
      ( SELECT MAX(C.VALUE) FROM M_TRANSACTIONS T, M_SESSION_CONTEXT C WHERE T.UPDATE_TRANSACTION_ID = B.LOCK_OWNER_UPDATE_TRANSACTION_ID AND 
        C.HOST = T.HOST AND C.PORT = T.PORT AND C.CONNECTION_ID = B.LOCK_OWNER_CONNECTION_ID AND UPPER(C.KEY) LIKE '%APPLICATIONUSER' ) BLOCKING_APP_USER,
      ( SELECT MAX(C.VALUE) FROM M_TRANSACTIONS T, M_SESSION_CONTEXT C WHERE T.UPDATE_TRANSACTION_ID = B.LOCK_OWNER_UPDATE_TRANSACTION_ID AND 
        C.HOST = T.HOST AND C.PORT = T.PORT AND C.CONNECTION_ID = B.LOCK_OWNER_CONNECTION_ID AND UPPER(C.KEY) = 'APPLICATION' ) BLOCKING_APP_NAME,
      ( SELECT MAX(C.VALUE) FROM M_TRANSACTIONS T, M_SESSION_CONTEXT C WHERE T.UPDATE_TRANSACTION_ID = B.LOCK_OWNER_UPDATE_TRANSACTION_ID AND 
        C.HOST = T.HOST AND C.PORT = T.PORT AND C.CONNECTION_ID = B.LOCK_OWNER_CONNECTION_ID AND UPPER(C.KEY) = 'APPLICATIONSOURCE' ) BLOCKING_APP_SOURCE
    FROM
      BASIS_INFO BI,
      M_BLOCKED_TRANSACTIONS B
    WHERE
      B.HOST LIKE BI.HOST AND
      TO_VARCHAR(B.PORT) LIKE BI.PORT
  )
),
SYSTEM_REPLICATION AS
( SELECT
    HOST,
    PORT,
    SECONDARY_HOST,
    REPLICATION_MODE,
    OPERATION_MODE,
    BACKLOG_KB,
    BACKLOG_S,
    MAX(LENGTH(SECONDARY_HOST)) OVER () SECONDARY_HOST_LEN
  FROM
  ( SELECT
      CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN R.HOST             ELSE 'any' END HOST,
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(R.PORT) ELSE 'any' END PORT,
      CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN R.SECONDARY_HOST   ELSE 'any' END SECONDARY_HOST,
      MAX(R.REPLICATION_MODE) REPLICATION_MODE,
      MAX(R2.OPERATION_MODE) OPERATION_MODE,
      TO_DECIMAL(SUM(R.BACKLOG_SIZE) / 1024, 10, 2) BACKLOG_KB,
      TO_DECIMAL(MAX(R.BACKLOG_TIME) / 1000000, 10, 2) BACKLOG_S
    FROM
      BASIS_INFO BI,
      M_SERVICE_REPLICATION R,
      M_SYSTEM_REPLICATION R2
    WHERE
      R.HOST LIKE BI.HOST AND
      TO_VARCHAR(R.PORT) LIKE BI.PORT AND
      R2.SITE_ID = R.SITE_ID AND
      R2.SECONDARY_SITE_ID = R.SECONDARY_SITE_ID
    GROUP BY
      CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN R.HOST             ELSE 'any' END,
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN TO_VARCHAR(R.PORT) ELSE 'any' END,
      CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN R.SECONDARY_HOST   ELSE 'any' END
  )
)
SELECT MAP(BI.LINE_LENGTH, -1, LINE, SUBSTR(D.LINE, 1, BI.LINE_LENGTH)) LINE FROM BASIS_INFO BI, ( 
SELECT 5 LINE_NO, '' HOST, '' PORT, '*********************************' LINE FROM DUMMY
UNION ALL SELECT    10, '', '',     '* SAP HANA CURRENT STATE REPORT *' FROM DUMMY
UNION ALL SELECT    20, '', '',     '*********************************' FROM DUMMY
UNION ALL SELECT    30, '', '', '' FROM DUMMY
UNION ALL SELECT    90, '', '', RPAD('Generated with:', 20) || 'SQL: "HANA_Global_CurrentStateReport" (SAP Note 1969700)' FROM DUMMY
UNION ALL SELECT   100, '', '', RPAD('Analysis time:',  20) || TO_VARCHAR(CURRENT_TIMESTAMP, 'YYYY/MM/DD HH24:MI:SS')     FROM DUMMY
UNION ALL SELECT   125, '', '', RPAD('Database name:',  20) || DATABASE_NAME                                              FROM M_DATABASE
UNION ALL SELECT   127, '', '', RPAD('Revision level:', 20) || VERSION                                                    FROM M_DATABASE
UNION ALL SELECT   130, '', '', RPAD('Configuration:',  20) || 'Host:' || CHAR(32) || MAP(HOST, '%', 'all', HOST) || ', port:' || CHAR(32) || MAP(PORT, '%', 'all', PORT) ||
                                ', aggregation:' || CHAR(32) || AGGREGATE_BY FROM BASIS_INFO
UNION ALL SELECT 10000, '', '', '' FROM DUMMY
UNION ALL SELECT 10010, '', '', '***************************' FROM DUMMY
UNION ALL SELECT 10020, '', '', '* LOAD AND STATE OVERVIEW *' FROM DUMMY
UNION ALL SELECT 10030, '', '', '***************************' FROM DUMMY
UNION ALL SELECT 10040, '', '', '' FROM DUMMY
UNION ALL SELECT 10050, '', '', RPAD('CPU,', 11) || '|' || CHAR(32) || H1_PREFIX || LPAD('CPU_CORES', 9) || CHAR(32) || LPAD('CPU_THREADS', 11) || CHAR(32) ||
  LPAD('CPU_PCT', 7) || CHAR(32) || LPAD('SYS_PCT', 7) || CHAR(32) || LPAD('PING_MS', 7) || CHAR(32) || 
  LPAD('MEM_PHYS_GB', 11) || CHAR(32) || LPAD('ALLOC_LIM_GB', 12) || CHAR(32) || LPAD('MEM_USED_GB', 11) || CHAR(32) || LPAD('UNLOADS', 7) FROM BASIS_INFO
UNION ALL SELECT 10060, '', '', RPAD('memory', 11) || '|' || CHAR(32) || H2_PREFIX || LPAD('=', 9, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) ||
  LPAD('=', 7, '=') || CHAR(32) || LPAD('=', 7, '=') || CHAR(32) || LPAD('=', 7, '=') || CHAR(32) || 
  LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 12, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 7, '=') FROM BASIS_INFO
UNION ALL
SELECT
  10100,
  L.HOST,
  L.PORT,
  RPAD('', 11) || '|' || CHAR(32) || CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.PORT, 6) ELSE '' END ||
  LPAD(L.CPU_CORES, 9) || CHAR(32) || LPAD(L.CPU_THREADS, 11) || CHAR(32) ||
  LPAD(L.CPU, 7) || CHAR(32) || LPAD(L.SYSTEM_CPU, 7) || CHAR(32) || LPAD(L.PING_MS, 7) || CHAR(32) || 
  LPAD(L.MEM_PHYS_GB, 11) || CHAR(32) || LPAD(L.ALLOC_LIM_GB, 12) || CHAR(32) || LPAD(L.MEM_USED_GB, 11) || CHAR(32) || LPAD(L.UNLOADS, 7)
FROM
  BASIS_INFO BI,
  LOAD L
UNION ALL SELECT 11040, '', '', '' FROM DUMMY
UNION ALL SELECT 11050, '', '', RPAD('Sessions,', 11) || '|' || CHAR(32) || H1_PREFIX || LPAD('STMTS_PER_S', 11) || CHAR(32) || 
  LPAD('PEND_SESSIONS', 13) || CHAR(32) || LPAD('CONNS', 7) || CHAR(32) ||
  LPAD('TRANSACTIONS', 12) || CHAR(32) || LPAD('BLOCKED_TRANS', 13) || CHAR(32) ||
  LPAD('THREADS', 7) || CHAR(32) || LPAD('ACT_THREADS', 11) || CHAR(32) || LPAD('WAIT_THREADS', 12) || CHAR(32) ||
  LPAD('TOT_SQL', 7) || CHAR(32) || LPAD('ACT_SQL', 7) || CHAR(32) || LPAD('WAIT_SQL', 8) FROM BASIS_INFO
UNION ALL SELECT 11060, '', '', RPAD('threads,', 11) || '|' || CHAR(32) || H2_PREFIX || LPAD('=', 11, '=') || CHAR(32) || 
  LPAD('=', 13, '=') || CHAR(32) || LPAD('=', 7, '=') || CHAR(32) ||
  LPAD('=', 12, '=') || CHAR(32) || LPAD('=', 13, '=') || CHAR(32) ||
  LPAD('=', 7, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 12, '=') || CHAR(32) ||
  LPAD('=', 7, '=') || CHAR(32) || LPAD('=', 7, '=') || CHAR(32) || LPAD('=', 8, '=') || CHAR(32) FROM BASIS_INFO
UNION ALL
SELECT
  11100,
  L.HOST,
  L.PORT,
  RPAD(MAP(ROW_NUMBER() OVER (ORDER BY L.HOST, L.PORT), 1, 'statements', ' '), 11) || '|' || CHAR(32) || CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.PORT, 6) ELSE '' END ||
  LPAD(L.STMTS_PER_S, 11) || CHAR(32) || LPAD(L.PENDING_SESSIONS, 13) || CHAR(32) || LPAD(L.CONNECTION_COUNT, 7) || CHAR(32) || 
  LPAD(L.TRANSACTION_COUNT, 12) || CHAR(32) || LPAD(L.BLOCKED_TRANSACTION_COUNT, 13) || CHAR(32) ||
  LPAD(L.TOT_THREADS, 7) || CHAR(32) || LPAD(L.ACT_THREADS, 11) || CHAR(32) || LPAD(L.WAIT_THREADS, 12) || CHAR(32) ||
  LPAD(L.TOT_SQL, 7) || CHAR(32) || LPAD(L.ACT_SQL, 7) || CHAR(32) || LPAD(L.WAIT_SQL, 8) || CHAR(32)
FROM
  BASIS_INFO BI,
  LOAD L
UNION ALL SELECT 12040, '', '', '' FROM DUMMY
UNION ALL SELECT 12050, '', '', RPAD('Disk I/O', 11) || '|' || CHAR(32) || H1_PREFIX || 
  LPAD('DATA_READ_MBPS', 14) || CHAR(32) || LPAD('DATA_READ_ACT_PCT', 17) || CHAR(32) || LPAD('DATA_WRT_MBPS', 13) || CHAR(32) || LPAD('DATA_WRT_ACT_PCT', 16) || CHAR(32) ||
  LPAD('LOG_READ_MBPS', 13) || CHAR(32) || LPAD('LOG_READ_ACT_PCT', 16) || CHAR(32) || LPAD('LOG_WRT_MBPS', 12) || CHAR(32) || LPAD('LOG_WRT_ACT_PCT', 15) || CHAR(32)
FROM BASIS_INFO
UNION ALL SELECT 12060, '', '', RPAD('', 11) || '|' || CHAR(32) || H2_PREFIX || 
  LPAD('=', 14, '=') || CHAR(32) || LPAD('=', 17, '=') || CHAR(32) || LPAD('=', 13, '=') || CHAR(32) || LPAD('=', 16, '=') || CHAR(32) ||
  LPAD('=', 13, '=') || CHAR(32) || LPAD('=', 16, '=') || CHAR(32) || LPAD('=', 12, '=') || CHAR(32) || LPAD('=', 15, '=') 
FROM BASIS_INFO
UNION ALL
SELECT
  12100,
  L.HOST,
  L.PORT,
  RPAD('', 11) || '|' || CHAR(32) || CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.PORT, 6) ELSE '' END ||
  LPAD(L.DATA_READ_MBPS, 14) || CHAR(32) || LPAD(L.DATA_READ_ACT_PCT, 17) || CHAR(32) ||
  LPAD(L.DATA_WRT_MBPS, 13) || CHAR(32) || LPAD(L.DATA_WRT_ACT_PCT, 16) || CHAR(32) ||
  LPAD(L.LOG_READ_MBPS, 13) || CHAR(32) || LPAD(L.LOG_READ_ACT_PCT, 16) || CHAR(32) ||
  LPAD(L.LOG_WRT_MBPS, 12) || CHAR(32) || LPAD(L.LOG_WRT_ACT_PCT, 15) || CHAR(32)
FROM
  BASIS_INFO BI,
  LOAD L
UNION ALL SELECT 13040, '', '', '' FROM DUMMY
UNION ALL SELECT 13050, '', '', RPAD('MVCC,', 11) || '|' || CHAR(32) || H1_PREFIX || 
  RPAD('LOCAL_LOCK_START', 19) || CHAR(32) || RPAD('GLOBAL_LOCK_START', 19) || CHAR(32) || LPAD('HIST_FILES', 10) || CHAR(32) || LPAD('VERSIONS', 9) || CHAR(32) || LPAD('COMM_ID_RANGE', 13)
FROM BASIS_INFO
UNION ALL SELECT 13060, '', '', RPAD('garbage', 11) || '|' || CHAR(32) || H2_PREFIX || 
  RPAD('=', 19, '=') || CHAR(32) || RPAD('=', 19, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 9, '=') || CHAR(32) || LPAD('=', 13, '=') FROM BASIS_INFO
UNION ALL
SELECT
  13100,
  L.HOST,
  L.PORT,
  RPAD(MAP(ROW_NUMBER() OVER (ORDER BY L.HOST, L.PORT), 1, 'collection', ' '), 11) || '|' || CHAR(32) || CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.PORT, 6) ELSE '' END ||
  RPAD(IFNULL(G.LOCAL_LOCK_TIME, ''), 19) || CHAR(32) || RPAD(IFNULL(G.GLOBAL_LOCK_TIME, ''), 19) || CHAR(32) || LPAD(IFNULL(TO_VARCHAR(G.HISTORY_FILES), ''), 10) || CHAR(32) || 
    LPAD(IFNULL(TO_VARCHAR(L.VERSIONS), ''), 9) || CHAR(32) || LPAD(IFNULL(TO_VARCHAR(L.COMMIT_ID_RANGE), ''), 13)
FROM
  BASIS_INFO BI,
  LOAD L LEFT OUTER JOIN
  GARBAGE_COLLECTION G ON
    G.HOST = L.HOST AND
    G.PORT = L.PORT
UNION ALL SELECT 14000, '', '', '' FROM DUMMY
UNION ALL SELECT 14050, '', '', RPAD('Workload', 11) || '|' || CHAR(32) || H1_PREFIX || LPAD('EXEC_PER_S', 10) || CHAR(32) || LPAD('PREP_PER_S', 10) || CHAR(32) || LPAD('TRANS_PER_S', 11) || CHAR(32) || LPAD('UPD_TRANS_PER_S', 15) || CHAR(32) ||
   LPAD('COMMITS_PER_S', 13) || CHAR(32) || LPAD('ROLLBACKS_PER_S', 15) || CHAR(32) || LPAD('MEM_MB_PER_S', 12) FROM BASIS_INFO
UNION ALL SELECT 14060, '', '', RPAD('', 11) || '|' || CHAR(32) || H2_PREFIX || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 15, '=') || CHAR(32) ||
   LPAD('=', 13, '=') || CHAR(32) || LPAD('=', 15, '=') || CHAR(32) || LPAD('=', 12, '=') FROM BASIS_INFO
UNION ALL
SELECT
  14100,
  W.HOST,
  W.PORT,
  RPAD('', 11) || '|' || CHAR(32) || CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(W.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(W.PORT, 6) ELSE '' END ||
  LPAD(W.EXEC_PER_S, 10) || CHAR(32) || LPAD(W.COMP_PER_S, 10) || CHAR(32) || LPAD(W.TRANS_PER_S, 11) || CHAR(32) || LPAD(W.UPD_TRANS_PER_S, 15) || CHAR(32) ||
   LPAD(W.COMMITS_PER_S, 13) || CHAR(32) || LPAD(W.ROLLBACKS_PER_S, 15) || CHAR(32) || LPAD(W.MEM_MB_PER_S, 12)
FROM
  BASIS_INFO BI,
  WORKLOAD W
UNION ALL SELECT TOP 1 15000, '', '', '' FROM SYSTEM_REPLICATION
UNION ALL SELECT 15050, '', '', RPAD('System', 11) || '|' || CHAR(32) || H1_PREFIX || MAP(R.SECONDARY_HOST, 'any', '', RPAD('SECONDARY_HOST', GREATEST(14, R.SECONDARY_HOST_LEN)) || CHAR(32)) || RPAD('REPLICATION_MODE', 16) || CHAR(32) ||
  RPAD('OPERATION_MODE', 18) || CHAR(32) || LPAD('BACKLOG_KB', 10) || CHAR(32) || LPAD('BACKLOG_S', 9) FROM BASIS_INFO, ( SELECT TOP 1 * FROM SYSTEM_REPLICATION ) R
UNION ALL SELECT 15060, '', '', RPAD('replication', 11) || '|' || CHAR(32) || H2_PREFIX || MAP(R.SECONDARY_HOST, 'any', '', RPAD('=', GREATEST(14, R.SECONDARY_HOST_LEN), '=') || CHAR(32)) || RPAD('=', 16, '=') || CHAR(32) || 
  RPAD('=', 18, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 9, '=')  FROM BASIS_INFO, (SELECT TOP 1 * FROM SYSTEM_REPLICATION ) R
UNION ALL
SELECT
  15100,
  R.HOST,
  R.PORT,
  RPAD('', 11) || '|' || CHAR(32) || CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(R.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(R.PORT, 6) ELSE '' END ||
  MAP(R.SECONDARY_HOST, 'any', '', RPAD(R.SECONDARY_HOST, GREATEST(14, R.SECONDARY_HOST_LEN)) || CHAR(32)) || RPAD(R.REPLICATION_MODE, 16) || CHAR(32) || RPAD(R.OPERATION_MODE, 18) || CHAR(32) || LPAD(R.BACKLOG_KB, 10) || CHAR(32) ||
   LPAD(R.BACKLOG_S, 9)
FROM
  BASIS_INFO BI,
  SYSTEM_REPLICATION R
UNION ALL SELECT 20000, '', '', '' FROM DUMMY
UNION ALL SELECT 20010, '', '', '******************' FROM DUMMY
UNION ALL SELECT 20020, '', '', '* MEMORY DETAILS *' FROM DUMMY
UNION ALL SELECT 20030, '', '', '******************' FROM DUMMY
UNION ALL SELECT 20040, '', '', '' FROM DUMMY
UNION ALL SELECT 20050, '', '', H1_PREFIX || RPAD('HEAP_ALLOCATOR', H.HEAP_ALLOCATOR_LEN) || CHAR(32) || LPAD('MEM_USED_GB', 11) || CHAR(32) || LPAD('COUNT', 5) || CHAR(32) ||
  RPAD('COMPONENT', 40) FROM BASIS_INFO, ( SELECT TOP 1 * FROM HEAP_ALLOCATORS ) H
UNION ALL SELECT 20060, '', '', H2_PREFIX || RPAD('=', H.HEAP_ALLOCATOR_LEN, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 5, '=') || CHAR(32) ||
  RPAD('=', 40, '=') FROM BASIS_INFO, ( SELECT TOP 1 * FROM HEAP_ALLOCATORS ) H
UNION ALL
SELECT
  20100,
  LPAD(99999 - H.MEM_USED_GB, 10),
  '',
  CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(H.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(H.PORT, 6) ELSE '' END ||
  RPAD(H.HEAP_ALLOCATOR, H.HEAP_ALLOCATOR_LEN) || CHAR(32) || LPAD(H.MEM_USED_GB, 11) || CHAR(32) || LPAD(H.COUNT, 5) || CHAR(32) ||
  H.COMPONENT
FROM
  BASIS_INFO BI,
  HEAP_ALLOCATORS H
UNION ALL SELECT 30000, '', '', '' FROM DUMMY
UNION ALL SELECT 30010, '', '', '*******************' FROM DUMMY
UNION ALL SELECT 30020, '', '', '* THREAD ACTIVITY *' FROM DUMMY
UNION ALL SELECT 30030, '', '', '*******************' FROM DUMMY
UNION ALL SELECT 30040, '', '', '' FROM DUMMY
UNION ALL SELECT 30050, '', '', H1_PREFIX || LPAD('CONN_ID', 10) || CHAR(32) || LPAD('THREAD_ID', 9) || CHAR(32) || LPAD('DUR_S', 5) || CHAR(32) || LPAD('CPU_S', 5) || CHAR(32) ||
  RPAD('THREAD_TYPE', THREAD_TYPE_LEN) || CHAR(32) || RPAD('STATE', THREAD_STATE_LEN ) || CHAR(32) || RPAD('LOCK_NAME', LOCK_NAME_LEN) || CHAR(32) || RPAD('STATEMENT_HASH', 32) || CHAR(32) ||
  RPAD('THREAD_METHOD', THREAD_METHOD_LEN) || CHAR(32) || RPAD('APP_USER', APP_USER_LEN) || CHAR(32) || RPAD('APP_NAME', APP_NAME_LEN) || CHAR(32) || 
  RPAD('APP_SOURCE', APP_SOURCE_LEN) || CHAR(32) || RPAD('THREAD_DETAIL', THREAD_DETAIL_LEN)
  FROM BASIS_INFO, ( SELECT TOP 1 * FROM THREADS )
UNION ALL SELECT 30060, '', '', H2_PREFIX || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 9, '=') || CHAR(32) || LPAD('=', 5, '=') || CHAR(32) || LPAD('=', 5, '=') || CHAR(32) ||
  RPAD('=', THREAD_TYPE_LEN, '=') || CHAR(32) || RPAD('=', THREAD_STATE_LEN, '=') || CHAR(32) || RPAD('=', LOCK_NAME_LEN, '=') || CHAR(32) || RPAD('=', 32, '=') || CHAR(32) ||
  RPAD('=', THREAD_METHOD_LEN, '=') || CHAR(32) || RPAD('=', APP_USER_LEN, '=') || CHAR(32) || RPAD('=', APP_NAME_LEN, '=') || CHAR(32) || 
  RPAD('=', APP_SOURCE_LEN, '=') || CHAR(32) || RPAD('=', THREAD_DETAIL_LEN, '=')
  FROM BASIS_INFO, (SELECT TOP 1 * FROM THREADS )
UNION ALL
SELECT
  30100,
  T.HOST,
  T.PORT,
  CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(T.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(T.PORT, 6) ELSE '' END ||
  LPAD(T.CONN_ID, 10) || CHAR(32) || LPAD(T.THREAD_ID, 9) || CHAR(32) || LPAD(T.DUR_S, 5) || CHAR(32) || LPAD(T.CPU_S, 5) || CHAR(32) ||
  RPAD(T.THREAD_TYPE, T.THREAD_TYPE_LEN) || CHAR(32) ||
  RPAD(T.THREAD_STATE, T.THREAD_STATE_LEN) || CHAR(32) ||
  RPAD(T.LOCK_NAME, T.LOCK_NAME_LEN) || CHAR(32) ||
  RPAD(T.STATEMENT_HASH, 32) || CHAR(32) ||
  RPAD(T.THREAD_METHOD, T.THREAD_METHOD_LEN) || CHAR(32) || 
  RPAD(T.APP_USER, T.APP_USER_LEN) || CHAR(32) ||
  RPAD(T.APP_NAME, T.APP_NAME_LEN) || CHAR(32) ||
  RPAD(T.APP_SOURCE, T.APP_SOURCE_LEN) || CHAR(32) ||
  RPAD(T.THREAD_DETAIL, T.THREAD_DETAIL_LEN)
FROM
  BASIS_INFO BI,
  THREADS T
UNION ALL SELECT 40000, '', '', '' FROM DUMMY
UNION ALL SELECT 40010, '', '', '*********************' FROM DUMMY
UNION ALL SELECT 40020, '', '', '* ACTIVE STATEMENTS *' FROM DUMMY
UNION ALL SELECT 40030, '', '', '*********************' FROM DUMMY
UNION ALL SELECT 40040, '', '', '' FROM DUMMY
UNION ALL SELECT 40050, '', '', H1_PREFIX || RPAD('START_TIME', 19) || CHAR(32) || LPAD('DURATION_S', 10) || CHAR(32) || LPAD('CONN_ID', 10) || CHAR(32) || RPAD('STATUS', 9) || CHAR(32) ||
  LPAD('MEM_MB', 7) || CHAR(32) || RPAD('STATEMENT_HASH', 32) || CHAR(32) || RPAD('APP_USER', GREATEST(8, A.APP_USER_LEN)) || CHAR(32) || RPAD('STATEMENT_STRING', 80) FROM BASIS_INFO, ( SELECT TOP 1 * FROM ACTIVE_STATEMENTS ) A
UNION ALL SELECT 40060, '', '', H2_PREFIX || RPAD('=', 19, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || RPAD('=', 9, '=') || CHAR(32) ||
  LPAD('=', 7, '=') || CHAR(32) || RPAD('=', 32, '=') || CHAR(32) || RPAD('=', GREATEST(8, A.APP_USER_LEN), '=') || CHAR(32) || RPAD('=', 80, '=') FROM BASIS_INFO, ( SELECT TOP 1 * FROM ACTIVE_STATEMENTS ) A
UNION ALL
SELECT
  40100,
  LPAD(999999999 - A.DURATION_S, 10) || A.CONNECTION_ID,
  LPAD(A.LINE_NO, 10),
  CASE
    WHEN A.LINE_NO = 1 THEN CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(A.HOST, BI.HOST_LEN + 1) ELSE '' END ||
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(A.PORT, 6) ELSE '' END ||
      RPAD(IFNULL(A.START_TIME, ''), 19) || CHAR(32) || LPAD(A.DURATION_S, 10) || CHAR(32) || LPAD(IFNULL(TO_VARCHAR(A.CONNECTION_ID), ''), 10) || CHAR(32) || RPAD(IFNULL(A.STATEMENT_STATUS, ''), 9) || CHAR(32) ||
      LPAD(IFNULL(TO_VARCHAR(A.MEM_MB), ''), 7) || CHAR(32) || RPAD(IFNULL(A.STATEMENT_HASH, ''), 32) || CHAR(32) || RPAD(IFNULL(A.APP_USER, ''), GREATEST(8, A.APP_USER_LEN)) || CHAR(32)
    ELSE LPAD('', LENGTH(CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(A.HOST, BI.HOST_LEN + 1) ELSE '' END ||
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(A.PORT, 6) ELSE '' END ||
      RPAD(IFNULL(A.START_TIME, ''), 19) || CHAR(32) || LPAD(A.DURATION_S, 10) || CHAR(32) || LPAD(IFNULL(TO_VARCHAR(A.CONNECTION_ID), ''), 10) || CHAR(32) || RPAD(IFNULL(A.STATEMENT_STATUS, ''), 9) || CHAR(32) ||
      LPAD(IFNULL(TO_VARCHAR(A.MEM_MB), ''), 7) || CHAR(32) || RPAD(IFNULL(A.STATEMENT_HASH, ''), 32) || CHAR(32) || RPAD(IFNULL(A.APP_USER, ''), GREATEST(8, A.APP_USER_LEN)) || CHAR(32)))
  END ||
  SUBSTR(IFNULL(A.STATEMENT_STRING, ''), POS_1 + 1, POS_2 - POS_1)
FROM
  BASIS_INFO BI,
  ( SELECT
      A.*,
      MAP(LINE_NO, 1, 0, LAG(POS, 1) OVER (PARTITION BY HOST, PORT, CONNECTION_ID, STATEMENT_ID ORDER BY LINE_NO)) POS_1,
      MAP(LINE_NO, MAX_LINE_NO, LENGTH(STATEMENT_STRING), POS) POS_2
    FROM
    ( SELECT
        L.LINE_NO,
        MAX(L.LINE_NO) OVER (PARTITION BY HOST, PORT, CONNECTION_ID) MAX_LINE_NO,
        A.*,
        (L.LINE_NO - 1) * 80 + GREATEST(LOCATE(SUBSTR(A.STATEMENT_STRING, L.LINE_NO * 80 - 79, 80), CHAR(32), -1), 
                                        LOCATE(SUBSTR(A.STATEMENT_STRING, L.LINE_NO * 80 - 79, 80), '.',      -1), 
                                        LOCATE(SUBSTR(A.STATEMENT_STRING, L.LINE_NO * 80 - 79, 80), '|',      -1), 
                                        LOCATE(SUBSTR(A.STATEMENT_STRING, L.LINE_NO * 80 - 79, 80), ',',      -1)) POS
      FROM
      ( SELECT TOP 80 ROW_NUMBER () OVER () LINE_NO FROM OBJECTS ) L,
        ACTIVE_STATEMENTS A
      WHERE
       L.LINE_NO <= ( LENGTH(A.STATEMENT_STRING) - 1 ) / 80 + 1
    ) A
  ) A
UNION ALL SELECT TOP 1 50000, '', '', '' FROM JOB_PROGRESS
UNION ALL SELECT TOP 1 50010, '', '', '***************' FROM JOB_PROGRESS
UNION ALL SELECT TOP 1 50020, '', '', '* ACTIVE JOBS *' FROM JOB_PROGRESS
UNION ALL SELECT TOP 1 50030, '', '', '***************' FROM JOB_PROGRESS
UNION ALL SELECT TOP 1 50040, '', '', '' FROM JOB_PROGRESS
UNION ALL SELECT 50050, '', '', H1_PREFIX || RPAD('START_TIME', 19) || CHAR(32) || LPAD('DURATION_S', 10) || CHAR(32) || RPAD('JOB_NAME', 33) || CHAR(32) || RPAD('PROGRESS', 18) || CHAR(32) ||
  RPAD('PROGRESS_DETAIL', J.PROGRESS_DETAIL_LEN) || CHAR(32) || RPAD('SCHEMA_NAME', J.SCHEMA_NAME_LEN) || CHAR(32) || RPAD('OBJECT_NAME', J.OBJECT_NAME_LEN) FROM BASIS_INFO, (SELECT TOP 1 * FROM JOB_PROGRESS) J
UNION ALL SELECT 50060, '', '', H2_PREFIX || RPAD('=', 19, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || RPAD('=', 33, '=') || CHAR(32) || RPAD('=', 18, '=') || CHAR(32) || 
  RPAD('=', J.PROGRESS_DETAIL_LEN, '=') || CHAR(32) || RPAD('=', J.SCHEMA_NAME_LEN, '=') || CHAR(32) || RPAD('=', J.OBJECT_NAME_LEN, '=') FROM BASIS_INFO, (SELECT TOP 1 * FROM JOB_PROGRESS) J
UNION ALL
SELECT
  50100,
  TO_VARCHAR(J.START_TIME, 'YYYY/MM/DD HH24:MI:SS'),
  '',
  CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(J.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(J.PORT, 6) ELSE '' END ||
  RPAD(J.START_TIME, 19) || CHAR(32) || 
  LPAD(J.DURATION_S, 10) || CHAR(32) ||
  RPAD(J.JOB_NAME, 33) || CHAR(32) ||
  RPAD(J.PROGRESS, 18) || CHAR(32) ||
  RPAD(IFNULL(J.PROGRESS_DETAIL, ''), J.PROGRESS_DETAIL_LEN) || CHAR(32) ||
  RPAD(IFNULL(J.SCHEMA_NAME, ''), J.SCHEMA_NAME_LEN) || CHAR(32) ||
  RPAD(IFNULL(J.OBJECT_NAME, ''), J.OBJECT_NAME_LEN)
FROM
  BASIS_INFO BI,
  JOB_PROGRESS J
UNION ALL SELECT 60000, '', '', '' FROM DUMMY
UNION ALL SELECT 60010, '', '', '*************' FROM DUMMY
UNION ALL SELECT 60020, '', '', '* SQL CACHE *' FROM DUMMY
UNION ALL SELECT 60030, '', '', '*************' FROM DUMMY
UNION ALL SELECT 60040, '', '', '' FROM DUMMY
UNION ALL SELECT 60050, '', '', H1_PREFIX || RPAD('STATEMENT_HASH', 32) || CHAR(32) || LPAD('EXECUTIONS', 10) || CHAR(32) || LPAD('TOTAL_CURS_S', 12) || CHAR(32) || 
    LPAD('AVG_CURS_MS', 11) || CHAR(32) || LPAD('TOTAL_EXEC_S', 12) || CHAR(32) || LPAD('AVG_EXEC_MS', 11) || CHAR(32) || LPAD('AVG_RECORDS', 11) || CHAR(32) ||
    LPAD('AVG_LOCK_MS', 11) || CHAR(32) || LPAD('AVG_PREP_MS', 11) || CHAR(32) || LPAD('AVG_MEM_MB', 10) || CHAR(32) ||
    RPAD('APP_NAME', C.APP_NAME_LEN) || CHAR(32) || RPAD('APP_SOURCE', 50) FROM BASIS_INFO, ( SELECT TOP 1 * FROM SQL_CACHE ) C
UNION ALL SELECT 60060, '', '', H2_PREFIX || RPAD('=', 32, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 12, '=') || CHAR(32) || 
    LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 12, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) ||
    LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 11, '=') || CHAR(32) || LPAD('=', 10, '=') || CHAR(32) ||
    RPAD('=', C.APP_NAME_LEN, '=') || CHAR(32) || RPAD('=', 50, '=') FROM BASIS_INFO, ( SELECT TOP 1 * FROM SQL_CACHE ) C
UNION ALL
SELECT
  60100,
  LPAD(999999999 - C.TOT_EXEC_S, 9),
  '',
  CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(C.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(C.PORT, 6) ELSE '' END ||
  RPAD(C.STATEMENT_HASH, 32) || CHAR(32) || LPAD(C.EXECUTIONS, 10) || CHAR(32) || LPAD(C.TOT_CURS_S, 12) || CHAR(32) || 
    LPAD(C.AVG_CURS_MS, 11) || CHAR(32) || LPAD(C.TOT_EXEC_S, 12) || CHAR(32) || LPAD(C.AVG_EXEC_MS, 11) || CHAR(32) || LPAD(C.AVG_RECORDS, 11) || CHAR(32) ||
    LPAD(C.AVG_LOCK_MS, 11) || CHAR(32) || LPAD(C.AVG_PREP_MS, 11) || CHAR(32) || LPAD(C.AVG_MEM_MB, 10) || CHAR(32) ||
    RPAD(C.APP_NAME, C.APP_NAME_LEN) || CHAR(32) || C.APP_SOURCE
FROM
  BASIS_INFO BI,
  SQL_CACHE C
UNION ALL SELECT 70000, '', '', '' FROM DUMMY
UNION ALL SELECT 70010, '', '', '*****************' FROM DUMMY
UNION ALL SELECT 70020, '', '', '* JOB EXECUTORS *' FROM DUMMY
UNION ALL SELECT 70030, '', '', '*****************' FROM DUMMY
UNION ALL SELECT 70040, '', '', '' FROM DUMMY
UNION ALL SELECT 70050, '', '', H1_PREFIX || LPAD('MAX_CONCURRENCY', 15) || CHAR(32) || LPAD('TOTAL_WORKERS', 13) || CHAR(32) || LPAD('QUEUED_WORKERS', 14) FROM BASIS_INFO
UNION ALL SELECT 70060, '', '', H2_PREFIX || RPAD('=', 15, '=') || CHAR(32) || LPAD('=', 13, '=') || CHAR(32) || LPAD('=', 14, '=') FROM BASIS_INFO
UNION ALL
SELECT
  70100,
  J.HOST,
  J.PORT,
  CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(J.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(J.PORT, 6) ELSE '' END ||
  LPAD(J.MAX_CONCURRENCY, 15) || CHAR(32) || LPAD(J.TOTAL_WORKERS, 13) || CHAR(32) || LPAD(J.QUEUED_WORKERS, 14)
FROM
  BASIS_INFO BI,
  JOBEXECUTORS J
UNION ALL SELECT TOP 1 80000, '', '', '' FROM TRANSACTIONAL_LOCK_WAITS
UNION ALL SELECT TOP 1 80010, '', '', '****************************' FROM TRANSACTIONAL_LOCK_WAITS
UNION ALL SELECT TOP 1 80020, '', '', '* TRANSACTIONAL LOCK WAITS *' FROM TRANSACTIONAL_LOCK_WAITS
UNION ALL SELECT TOP 1 80030, '', '', '****************************' FROM TRANSACTIONAL_LOCK_WAITS
UNION ALL SELECT TOP 1 80040, '', '', '' FROM TRANSACTIONAL_LOCK_WAITS
UNION ALL SELECT 80050, '', '', H1_PREFIX || LPAD('WAIT_S', 6) || CHAR(32) || LPAD('BLOCKED_CONN_ID', 15) || CHAR(32) || LPAD('BLOCKING_CONN_ID', 16) || CHAR(32) || 
  RPAD('SCHEMA_NAME', L.SCHEMA_NAME_LEN) || CHAR(32) || RPAD('TABLE_NAME', GREATEST(10, L.TABLE_NAME_LEN)) || CHAR(32) ||
  RPAD('LOCK_TYPE', 13) || CHAR(32) || RPAD('LOCK_MODE', 21) || CHAR(32) ||
  RPAD('BLOCKING_APP_NAME', GREATEST(17, L.BLOCKING_APP_NAME_LEN)) || CHAR(32) ||
  RPAD('BLOCKING_APP_USER', GREATEST(17, L.BLOCKING_APP_USER_LEN)) || CHAR(32) || 
  RPAD('BLOCKING_APP_SOURCE', GREATEST(19, L.BLOCKING_APP_SOURCE_LEN)) FROM BASIS_INFO, ( SELECT TOP 1 * FROM TRANSACTIONAL_LOCK_WAITS ) L
UNION ALL SELECT 80060, '', '', H2_PREFIX || LPAD('=', 6, '=') || CHAR(32) || LPAD('=', 15, '=') || CHAR(32) || LPAD('=', 16, '=') || CHAR(32) || 
  RPAD('=', L.SCHEMA_NAME_LEN, '=') || CHAR(32) || RPAD('=', GREATEST(10, L.TABLE_NAME_LEN), '=') || CHAR(32) ||
  RPAD('=', 13, '=') || CHAR(32) || RPAD('=', 21, '=') || CHAR(32) ||
  RPAD('=', GREATEST(17, L.BLOCKING_APP_NAME_LEN), '=') || CHAR(32) ||
  RPAD('=', GREATEST(17, L.BLOCKING_APP_USER_LEN), '=') || CHAR(32) || 
  RPAD('=', GREATEST(19, L.BLOCKING_APP_SOURCE_LEN), '=') FROM BASIS_INFO, ( SELECT TOP 1 * FROM TRANSACTIONAL_LOCK_WAITS ) L
UNION ALL
SELECT
  80100,
  LPAD(99999999 - WAIT_S, 9),
  '',
  CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.HOST, BI.HOST_LEN + 1) ELSE '' END ||
  CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(L.PORT, 6) ELSE '' END ||
  LPAD(L.WAIT_S, 6) || CHAR(32) || LPAD(L.BLOCKED_CONN_ID, 15) || CHAR(32) || LPAD(L.BLOCKING_CONN_ID, 16) || CHAR(32) || 
  RPAD(L.SCHEMA_NAME, L.SCHEMA_NAME_LEN) || CHAR(32) || RPAD(L.TABLE_NAME, GREATEST(10, L.TABLE_NAME_LEN)) || CHAR(32) ||
  RPAD(L.LOCK_TYPE, 13) || CHAR(32) || RPAD(L.LOCK_MODE, 21) || CHAR(32) ||
  RPAD(L.BLOCKING_APP_NAME, GREATEST(17, L.BLOCKING_APP_NAME_LEN)) || CHAR(32) ||
  RPAD(L.BLOCKING_APP_USER, GREATEST(17, L.BLOCKING_APP_USER_LEN)) || CHAR(32) || 
  RPAD(L.BLOCKING_APP_SOURCE, GREATEST(19, L.BLOCKING_APP_SOURCE_LEN))
FROM
  BASIS_INFO BI,
  TRANSACTIONAL_LOCK_WAITS L
UNION ALL SELECT TOP 1 500000, '', '', '' FROM CALLSTACKS
UNION ALL SELECT TOP 1 500010, '', '', '**************' FROM CALLSTACKS
UNION ALL SELECT TOP 1 500020, '', '', '* CALLSTACKS *' FROM CALLSTACKS
UNION ALL SELECT TOP 1 500030, '', '', '**************' FROM CALLSTACKS
UNION ALL SELECT TOP 1 500040, '', '', '' FROM CALLSTACKS
UNION ALL SELECT 500050, '', '', H1_PREFIX || LPAD('CONN_ID', 10) || CHAR(32) || LPAD('THREAD_ID', 9) || CHAR(32) || LPAD('LVL', 3) || CHAR(32) || RPAD('MODULE_NAME', 80) FROM BASIS_INFO, (SELECT TOP 1 * FROM CALLSTACKS)
UNION ALL SELECT 500060, '', '', H2_PREFIX || LPAD('=', 10, '=') || CHAR(32) || LPAD('=', 9, '=') || CHAR(32) || LPAD('=', 3, '=') || CHAR(32) || RPAD('=', 80, '=')  FROM BASIS_INFO, (SELECT TOP 1 * FROM CALLSTACKS)
UNION ALL
SELECT
  500100,
  C.HOST,
  C.PORT || LPAD(C.CONN_ID, 10) || LPAD(C.THREAD_ID, 9) || LPAD(C.FRAME_LEVEL, 9),
  CASE 
    WHEN C.FRAME_LEVEL = 1 THEN
      CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(C.HOST, BI.HOST_LEN + 1) ELSE '' END ||
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(C.PORT, 6) ELSE '' END ||
      LPAD(C.CONN_ID, 10) || CHAR(32) || LPAD(C.THREAD_ID, 9) || CHAR(32)
    ELSE
      RPAD(CHAR(32), LENGTH(CASE WHEN BI.AGGREGATE_BY LIKE '%HOST%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(C.HOST, BI.HOST_LEN + 1) ELSE '' END ||
      CASE WHEN BI.AGGREGATE_BY LIKE '%PORT%' OR BI.AGGREGATE_BY = 'NONE' THEN RPAD(C.PORT, 6) ELSE '' END ||
      LPAD(C.CONN_ID, 10) || CHAR(32) || LPAD(C.THREAD_ID, 9) || CHAR(32) ) )
  END || 
  LPAD(C.FRAME_LEVEL, 3) || CHAR(32) || C.FRAME_NAME
FROM
  BASIS_INFO BI,
  CALLSTACKS C
UNION ALL SELECT 1000000, '', '', '' FROM DUMMY
UNION ALL SELECT 1000010, '', '', '****************************************' FROM DUMMY
UNION ALL SELECT 1000020, '', '', '* END OF SAP HANA CURRENT STATE REPORT *' FROM DUMMY
UNION ALL SELECT 1000030, '', '', '****************************************' FROM DUMMY
) D
ORDER BY
  D.LINE_NO,
  D.HOST,
  D.PORT,
  D.LINE
WITH HINT (IGNORE_PLAN_CACHE)