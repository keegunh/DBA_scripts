SELECT
/* 

[NAME]

- HANA_Security_Users_1.00.72+

[DESCRIPTION]

- User and schema overview

[SOURCE]

- SAP Note 1969700

[DETAILS AND RESTRICTIONS]

- STRING_AGG only available as of Revision 1.00.72

[VALID FOR]

- Revisions:              >= 1.00.72
- Statistics server type: all

[SQL COMMAND VERSION]

- 2014/05/07:  1.0 (initial version)
- 2014/12/12:  1.1 (USER_PARAMETERS included)
- 2015/02/12:  1.2 (PWD_EXPIRATION included)
- 2015/12/15:  1.3 (ONLY_USERS_WITH_EXPIRATION_DATE included)
- 2017/07/25:  1.4 (MIN_USER_CONNECTIONS and M_CONNECTIONS included)
- 2017/10/26:  1.5 (TIMEZONE included)
- 2018/11/14:  1.6 (calculation of password expiration time based on parameter maximum_password_lifetime)

[INVOLVED TABLES]

- USERS
- SCHEMAS
- USER_PARAMETERS

[INPUT PARAMETERS]

- TIMEZONE

  Used timezone (both for input and output parameters)

  'SERVER'       --> Display times in SAP HANA server time
  'UTC'          --> Display times in UTC time

- USER_NAME

  User name

  'SAPECC'        --> Only show user SAPECC
  'SAP%'          --> Show users with names starting with 'SAP'
  '%'             --> No user name restriction

- USER_PARAMETER_NAME

  Name of user parameter

  'CLIENT'        --> Users with parameter CLIENT being set
  '%'             --> No restriction related to user parameters

- MIN_USER_CONNECTIONS

  Minimum number of current connections with the user

  20              --> Only display users with at least 20 current connections
  -1              --> No restriction related to number of current connections

- ONLY_USERS_WITH_EXPIRATION_DATE

  Possibility to restrict output to users with end-of-validity date (VALID_UNTIL)

  'X'             --> Only display users with expiration date
  ' '             --> No restriction related to expiration date

- ONLY_USERS_WITH_PWD_EXPIRATION

  Possibility to restrict output to users with password expiration

  'X'             --> Only display users with password expiration
  ' '             --> No restriction related to password expiration

[OUTPUT PARAMETERS]

- USER_NAME:       User name
- CREATION_TIME:   User creation time
- VALID_UNTIL:     Validity date, empty if not validity restriction exists
- PWD_EXPIRE_TIME: Password expiration time
- DEACTIVATED:     'NO' if user is locked, otherwise 'YES'
- CONNECTIONS:     Number of current connections with this database user
- SCHEMA_NAMES:    Schemas assigned to user
- USER_PARAMETERS: User specific parameter settings

[EXAMPLE OUTPUT]

---------------------------------------------------------------------------------------------------
|USER_NAME|CREATION_TIME      |VALID_UNTIL|PWD_EXPIRATION|DEACTIVATED|SCHEMA_NAMES|USER_PARAMETERS|
---------------------------------------------------------------------------------------------------
|SAPDBCTRL|2014/12/11 15:48:04|           |YES           |NO         |SAPDBCTRL   |               |
|SAPTBJDB |2015/01/29 10:12:12|           |NO            |NO         |SAPTBJDB    |               |
|SAPSR3   |2015/02/04 16:01:34|           |NO            |NO         |SAPTBW      |               |
---------------------------------------------------------------------------------------------------

*/

  U.USER_NAME,
  TO_VARCHAR(CASE BI.TIMEZONE WHEN 'UTC' THEN ADD_SECONDS(U.CREATE_TIME, SECONDS_BETWEEN(CURRENT_TIMESTAMP, CURRENT_UTCTIMESTAMP)) ELSE U.CREATE_TIME END, 'YYYY/MM/DD HH24:MI:SS') CREATION_TIME,
  IFNULL(TO_VARCHAR(U.VALID_UNTIL, 'YYYY/MM/DD HH24:MI:SS'), '') VALID_UNTIL,
  IFNULL(TO_VARCHAR(CASE BI.TIMEZONE WHEN 'UTC' THEN ADD_SECONDS(ADD_DAYS(U.PASSWORD_CHANGE_TIME, P.PWD_LIFETIME_DAYS), SECONDS_BETWEEN(CURRENT_TIMESTAMP, CURRENT_UTCTIMESTAMP)) 
    ELSE ADD_DAYS(U.PASSWORD_CHANGE_TIME, P.PWD_LIFETIME_DAYS) END, 'YYYY/MM/DD HH24:MI:SS'), '') PWD_EXPIRE_TIME,
  MAP(U.USER_DEACTIVATED, 'TRUE', 'YES', 'NO') DEACTIVATED,
  LPAD(IFNULL(C.NUM_CONNECTIONS, 0), 11) CONNECTIONS,
  S.SCHEMA_NAMES,
  IFNULL(STRING_AGG(UP.PARAMETER || '=' || UP.VALUE, ', '), '') USER_PARAMETERS
FROM
( SELECT                       /* Modification section */
    'SERVER' TIMEZONE,                              /* SERVER, UTC */
    '%' USER_NAME,
    '%' PARAMETER_NAME,
    -1 MIN_USER_CONNECTIONS,
    ' ' ONLY_USERS_WITH_EXPIRATION_DATE,
    ' ' ONLY_USERS_WITH_PWD_EXPIRATION
  FROM
    DUMMY
) BI,
( SELECT
    IFNULL(MODIFIED_VALUE, DEFAULT_VALUE) PWD_LIFETIME_DAYS
  FROM
  ( SELECT
      MAX(MAP(LAYER_NAME, 'DEFAULT', VALUE, NULL)) DEFAULT_VALUE,
      MAX(MAP(LAYER_NAME, 'DEFAULT', NULL, VALUE)) MODIFIED_VALUE
    FROM
      M_INIFILE_CONTENTS
    WHERE
      KEY = 'maximum_password_lifetime'
  )
) P,
  USERS U LEFT OUTER JOIN
( SELECT
    SCHEMA_OWNER,
    STRING_AGG(SCHEMA_NAME, ', ') SCHEMA_NAMES
  FROM
    SCHEMAS
  GROUP BY
    SCHEMA_OWNER
) S ON
    S.SCHEMA_OWNER = U.USER_NAME LEFT OUTER JOIN
  USER_PARAMETERS UP ON
    UP.USER_NAME = U.USER_NAME LEFT OUTER JOIN
  ( SELECT
      USER_NAME,
      COUNT(*) NUM_CONNECTIONS
    FROM
      M_CONNECTIONS
    WHERE
      CONNECTION_ID > 0
    GROUP BY
      USER_NAME
  ) C ON
    C.USER_NAME = U.USER_NAME
WHERE
  U.USER_NAME LIKE BI.USER_NAME AND
  IFNULL(UP.PARAMETER, '') LIKE BI.PARAMETER_NAME AND
  ( BI.ONLY_USERS_WITH_EXPIRATION_DATE = ' ' AND BI.ONLY_USERS_WITH_PWD_EXPIRATION = ' ' OR 
    BI.ONLY_USERS_WITH_EXPIRATION_DATE = 'X' AND BI.ONLY_USERS_WITH_PWD_EXPIRATION = 'X' AND ( U.VALID_UNTIL IS NOT NULL OR U.PASSWORD_CHANGE_TIME IS NOT NULL ) OR
    BI.ONLY_USERS_WITH_EXPIRATION_DATE = 'X' AND BI.ONLY_USERS_WITH_PWD_EXPIRATION = ' ' AND U.VALID_UNTIL IS NOT NULL OR
    BI.ONLY_USERS_WITH_EXPIRATION_DATE = ' ' AND BI.ONLY_USERS_WITH_PWD_EXPIRATION = 'X' AND U.PASSWORD_CHANGE_TIME IS NOT NULL 
  ) AND
  ( BI.MIN_USER_CONNECTIONS = -1 OR IFNULL(C.NUM_CONNECTIONS, 0) >= BI.MIN_USER_CONNECTIONS )
GROUP BY
  BI.TIMEZONE,
  U.USER_NAME,
  U.CREATE_TIME,
  U.VALID_UNTIL,
  U.PASSWORD_CHANGE_TIME,
  U.USER_DEACTIVATED,
  C.NUM_CONNECTIONS,
  S.SCHEMA_NAMES,
  P.PWD_LIFETIME_DAYS
ORDER BY
  U.USER_NAME