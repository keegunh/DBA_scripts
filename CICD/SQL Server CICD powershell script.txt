#SQL Server 실제 적용한 자동배포 스크립트 
--------------------------------------------------------------------

Write-Host "SQL Server : begin automated deployment task"
Write-Host "Check Directory."
cd deploy
dir

# 접속 정보 정리
<# ... #>

# Connect to QA
$serviceIP="123.123.123.123"
$port=5678
$database="DB"
$username="deploy"
$password="deploy#$"

# 배포 폴더 내 sql파일을 하나씩 수행
$sqlfiles = Get-ChildItem -Filter *.sql
foreach ($file in $sqlfiles) {
	Write-Host "executing : $($file.Name)"
	#$logname = [io.path]::GetFileNameWithoutExtension($file.Name) + "_" + $datetime + ".log"

	Invoke-Sqlcmd -InputFile $file.FullName -ServerInstance $serviceIP','$port -Database $database -Username $username -Password $password -Verbose
	
}
echo ""

# 배포되는 각 오브젝트마다 권한 부여 프로시저 실행
echo $null >> grant.txt
foreach ($file in $sqlfiles) {
	"EXECUTE [권한부여 프로시저] '" + [io.path]::GetFileNameWithoutExtension($file.Name) + "';" >> grant.txt
}
Invoke-Sqlcmd -InputFile grant.txt -ServerInstance $serviceIP','$port -Database $database -Username $username -Password $password -Verbose
rm grant.txt

# [executed] 오늘 날짜의 폴더가 없으면 신규 생성
$datetime = Get-Date -format "yyyyMMddHHmmss"
$executedPath = Join-Path ..\executed \$datetime
if (Test-Path -Path $executedPath) {
    Write-Host "directory already exists. No directory created."
} else {
    Write-Host "new directory created."
	New-Item -Path $executedPath -ItemType "directory"
}
echo ""

# [latest] 폴더로 배포한 스크립트 복사. 동일 이름의 기존 파일은 신규 버전으로 갱신됨.
Get-ChildItem -Path ".\*.sql" -Recurse | Copy-Item -Destination ..\latest -force
Write-Host "deployed scripts copied from [deploy] to [latest]. Any files with the same name are overwritten."

# [executed] 내 신규 생성한 폴더로 배포한 스크립트 이동. 동일 이름의 기존 파일은 신규 버전으로 갱신됨.
Get-ChildItem -Path ".\*.sql" -Recurse | Move-Item -Destination $executedPath -force
Write-Host "deployed scripts moved from [deploy] to [executed]. Any files with the same name are overwritten."

echo "SQL Server : deployment task processed."




--------------------------------------------------------------------
로컬 PC 테스트 scripts

# Connect to QA
$serviceIP="123.123.123.123"
$port=5678
$database="DB"
$username="deploy"
$password="deploy#$"

Invoke-Sqlcmd "select @@version as version" -ServerInstance $serviceIP','$port -Database $database -Username $username -Password $password -Verbose


cd [테스트 폴더 경로]
echo $null >> grant.txt
foreach ($file in $sqlfiles) {
	"EXECUTE [권한부여 프로시저] '" + [io.path]::GetFileNameWithoutExtension($file.Name) + "';" >> grant.txt
}
Invoke-Sqlcmd -InputFile grant.txt -ServerInstance $serviceIP','$port -Database $database -Username $username -Password $password -Verbose
rm grant.txt