--INSERT DML 생성, 검증문
WITH CTE AS (
	SELECT SCHEMA_NAME(T.SCHEMA_ID) AS [SCHEMA_NAME], T.OBJECT_ID, T.NAME AS [TABLE_NAME], C.COLUMN_ID, C.NAME AS [COLUMN_NAME], C.IS_IDENTITY
	  FROM SYS.TABLES T WITH(NOLOCK)
	 INNER JOIN SYS.COLUMNS C WITH(NOLOCK)
		ON T.OBJECT_ID = C.OBJECT_ID
	 INNER JOIN INFORMATION_SCHEMA.COLUMNS IC WITH(NOLOCK)
        ON IC.COLUMN_NAME = C.NAME
       AND IC.TABLE_NAME = T.NAME
       AND IC.TABLE_SCHEMA = SCHEMA_NAME(T.SCHEMA_ID)
)
SELECT T3.*
	 , CASE WHEN T3.IS_IDENTITY_TABLE = 1 
            THEN 'SET IDENTITY_INSERT [DB1].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] ON;' + 'INSERT INTO [' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] (' + T3.COLUMN_LIST + ') SELECT ' + T3.COLUMN_LIST + ' FROM [DB2].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '];' + 'SET IDENTITY_INSERT [DB1].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] OFF;'
            ELSE 'INSERT INTO [' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] (' + T3.COLUMN_LIST + ') SELECT ' + T3.COLUMN_LIST + ' FROM [DB2].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '];' 
       END AS INSERT_DML_IDENTITY
	 , 'TRUNCATE TABLE [' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '];' AS TRUNCATE_DML
	 , 'SELECT ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'' AS ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'', * FROM [DB1].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] WITH(NOLOCK) EXCEPT SELECT ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'' AS ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'', * FROM [DB2].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] WITH(NOLOCK) ;' AS [EXCEPT_DB1-DB2]
	 , 'SELECT ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'' AS ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'', * FROM [DB2].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] WITH(NOLOCK) EXCEPT SELECT ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'' AS ''[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + ']'', * FROM [DB1].[' + T3.SCHEMA_NAME + '].[' + T3.TABLE_NAME + '] WITH(NOLOCK) ;' AS [EXCEPT_DB2-DB1]
  FROM (
		SELECT T1.SCHEMA_NAME
		     , T1.TABLE_NAME
		     , STUFF((
		              SELECT ',' + T2.COLUMN_NAME
		                FROM CTE T2
		               WHERE T1.OBJECT_ID = T2.OBJECT_ID
		                 FOR XML PATH('')), 1, 1, '') AS COLUMN_LIST
             , MAX(CONVERT(INTEGER, T1.IS_IDENTITY)) AS IS_IDENTITY_TABLE
		FROM CTE T1
		GROUP BY T1.SCHEMA_NAME, T1.TABLE_NAME, T1.OBJECT_ID
	 ) T3
;